// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: communication-protocol-v2.proto

package protobufv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data structures
type ProcessId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host  string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"` // String containing either domain name  or IP (most likely)
	Port  int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Owner string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`  // Short alias or acronym of the owner of the process
	Index int32  `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"` // Process index within the owner's processes. Must be 1, 2, or 3
	Rank  int32  `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`   // Populated by the hub when initiating consensus with AppPropose. Do not calculate your own rank,
}

func (x *ProcessId) Reset() {
	*x = ProcessId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessId) ProtoMessage() {}

func (x *ProcessId) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessId.ProtoReflect.Descriptor instead.
func (*ProcessId) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessId) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ProcessId) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProcessId) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ProcessId) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProcessId) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defined bool  `protobuf:"varint,1,opt,name=defined,proto3" json:"defined,omitempty"`
	V       int32 `protobuf:"varint,2,opt,name=v,proto3" json:"v,omitempty"` // Value; ignore if defined == false
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{1}
}

func (x *Value) GetDefined() bool {
	if x != nil {
		return x.Defined
	}
	return false
}

func (x *Value) GetV() int32 {
	if x != nil {
		return x.V
	}
	return 0
}

// Messages and events
// Process
type ProcRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`  // Some short alias
	Index int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"` // Process index: must be 1, 2, or 3
}

func (x *ProcRegistration) Reset() {
	*x = ProcRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcRegistration) ProtoMessage() {}

func (x *ProcRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcRegistration.ProtoReflect.Descriptor instead.
func (*ProcRegistration) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{2}
}

func (x *ProcRegistration) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ProcRegistration) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ProcInitializeSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// be handled by the process.
	Processes []*ProcessId `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"` // List of processes involved in the consensus algorithm (PI set)
}

func (x *ProcInitializeSystem) Reset() {
	*x = ProcInitializeSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcInitializeSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcInitializeSystem) ProtoMessage() {}

func (x *ProcInitializeSystem) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcInitializeSystem.ProtoReflect.Descriptor instead.
func (*ProcInitializeSystem) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{3}
}

func (x *ProcInitializeSystem) GetProcesses() []*ProcessId {
	if x != nil {
		return x.Processes
	}
	return nil
}

type ProcDestroySystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcDestroySystem) Reset() {
	*x = ProcDestroySystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcDestroySystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcDestroySystem) ProtoMessage() {}

func (x *ProcDestroySystem) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcDestroySystem.ProtoReflect.Descriptor instead.
func (*ProcDestroySystem) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{4}
}

// APP
type AppBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Triggers a BEB broadcast containing AppValue populated with the value from AppBroadcast
	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AppBroadcast) Reset() {
	*x = AppBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBroadcast) ProtoMessage() {}

func (x *AppBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBroadcast.ProtoReflect.Descriptor instead.
func (*AppBroadcast) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{5}
}

func (x *AppBroadcast) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppPropose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"` // The topic on which to reach consensus. There will be a consensus instance for each topic
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Random value chosen by the HUB
}

func (x *AppPropose) Reset() {
	*x = AppPropose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPropose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPropose) ProtoMessage() {}

func (x *AppPropose) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPropose.ProtoReflect.Descriptor instead.
func (*AppPropose) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{6}
}

func (x *AppPropose) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *AppPropose) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppDecide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"` // Decided value taken from UcDecide
}

func (x *AppDecide) Reset() {
	*x = AppDecide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDecide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDecide) ProtoMessage() {}

func (x *AppDecide) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDecide.ProtoReflect.Descriptor instead.
func (*AppDecide) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{7}
}

func (x *AppDecide) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Register string `protobuf:"bytes,1,opt,name=register,proto3" json:"register,omitempty"`
}

func (x *AppRead) Reset() {
	*x = AppRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRead) ProtoMessage() {}

func (x *AppRead) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRead.ProtoReflect.Descriptor instead.
func (*AppRead) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{8}
}

func (x *AppRead) GetRegister() string {
	if x != nil {
		return x.Register
	}
	return ""
}

type AppWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Register string `protobuf:"bytes,1,opt,name=register,proto3" json:"register,omitempty"`
	Value    *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Value to write in the register
}

func (x *AppWrite) Reset() {
	*x = AppWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppWrite) ProtoMessage() {}

func (x *AppWrite) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppWrite.ProtoReflect.Descriptor instead.
func (*AppWrite) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{9}
}

func (x *AppWrite) GetRegister() string {
	if x != nil {
		return x.Register
	}
	return ""
}

func (x *AppWrite) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppReadReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Register string `protobuf:"bytes,1,opt,name=register,proto3" json:"register,omitempty"`
	Value    *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Value read from the register
}

func (x *AppReadReturn) Reset() {
	*x = AppReadReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppReadReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppReadReturn) ProtoMessage() {}

func (x *AppReadReturn) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppReadReturn.ProtoReflect.Descriptor instead.
func (*AppReadReturn) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{10}
}

func (x *AppReadReturn) GetRegister() string {
	if x != nil {
		return x.Register
	}
	return ""
}

func (x *AppReadReturn) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppWriteReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Register string `protobuf:"bytes,1,opt,name=register,proto3" json:"register,omitempty"`
}

func (x *AppWriteReturn) Reset() {
	*x = AppWriteReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppWriteReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppWriteReturn) ProtoMessage() {}

func (x *AppWriteReturn) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppWriteReturn.ProtoReflect.Descriptor instead.
func (*AppWriteReturn) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{11}
}

func (x *AppWriteReturn) GetRegister() string {
	if x != nil {
		return x.Register
	}
	return ""
}

// UC
// In the Init event or constructor, initialize l (leader) with the max-rank process in PI
type UcPropose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UcPropose) Reset() {
	*x = UcPropose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcPropose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcPropose) ProtoMessage() {}

func (x *UcPropose) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcPropose.ProtoReflect.Descriptor instead.
func (*UcPropose) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{12}
}

func (x *UcPropose) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type UcDecide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UcDecide) Reset() {
	*x = UcDecide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcDecide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcDecide) ProtoMessage() {}

func (x *UcDecide) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcDecide.ProtoReflect.Descriptor instead.
func (*UcDecide) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{13}
}

func (x *UcDecide) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// EP
type EpAbort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpAbort) Reset() {
	*x = EpAbort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpAbort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpAbort) ProtoMessage() {}

func (x *EpAbort) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpAbort.ProtoReflect.Descriptor instead.
func (*EpAbort) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{14}
}

type EpAborted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ets            int32  `protobuf:"varint,1,opt,name=ets,proto3" json:"ets,omitempty"`                       // Needed to know in UC the timestamp of the EP, where the algorithm says "such that ts = ets do"
	ValueTimestamp int32  `protobuf:"varint,2,opt,name=valueTimestamp,proto3" json:"valueTimestamp,omitempty"` // The timestamp part of the "state" mentioned in the algorithm
	Value          *Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                    // The value part of the "state" mentioned in the algorithm
}

func (x *EpAborted) Reset() {
	*x = EpAborted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpAborted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpAborted) ProtoMessage() {}

func (x *EpAborted) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpAborted.ProtoReflect.Descriptor instead.
func (*EpAborted) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{15}
}

func (x *EpAborted) GetEts() int32 {
	if x != nil {
		return x.Ets
	}
	return 0
}

func (x *EpAborted) GetValueTimestamp() int32 {
	if x != nil {
		return x.ValueTimestamp
	}
	return 0
}

func (x *EpAborted) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpPropose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpPropose) Reset() {
	*x = EpPropose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpPropose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpPropose) ProtoMessage() {}

func (x *EpPropose) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpPropose.ProtoReflect.Descriptor instead.
func (*EpPropose) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{16}
}

func (x *EpPropose) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpDecide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ets   int32  `protobuf:"varint,1,opt,name=ets,proto3" json:"ets,omitempty"` // Needed to know in UC the timestamp of the EP, where the algorithm says "such that ts = ets do"
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpDecide) Reset() {
	*x = EpDecide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpDecide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpDecide) ProtoMessage() {}

func (x *EpDecide) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpDecide.ProtoReflect.Descriptor instead.
func (*EpDecide) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{17}
}

func (x *EpDecide) GetEts() int32 {
	if x != nil {
		return x.Ets
	}
	return 0
}

func (x *EpDecide) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpInternalRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpInternalRead) Reset() {
	*x = EpInternalRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalRead) ProtoMessage() {}

func (x *EpInternalRead) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalRead.ProtoReflect.Descriptor instead.
func (*EpInternalRead) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{18}
}

type EpInternalState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueTimestamp int32  `protobuf:"varint,1,opt,name=valueTimestamp,proto3" json:"valueTimestamp,omitempty"`
	Value          *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpInternalState) Reset() {
	*x = EpInternalState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalState) ProtoMessage() {}

func (x *EpInternalState) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalState.ProtoReflect.Descriptor instead.
func (*EpInternalState) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{19}
}

func (x *EpInternalState) GetValueTimestamp() int32 {
	if x != nil {
		return x.ValueTimestamp
	}
	return 0
}

func (x *EpInternalState) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpInternalWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpInternalWrite) Reset() {
	*x = EpInternalWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalWrite) ProtoMessage() {}

func (x *EpInternalWrite) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalWrite.ProtoReflect.Descriptor instead.
func (*EpInternalWrite) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{20}
}

func (x *EpInternalWrite) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpInternalAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpInternalAccept) Reset() {
	*x = EpInternalAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalAccept) ProtoMessage() {}

func (x *EpInternalAccept) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalAccept.ProtoReflect.Descriptor instead.
func (*EpInternalAccept) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{21}
}

type EpInternalDecided struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpInternalDecided) Reset() {
	*x = EpInternalDecided{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalDecided) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalDecided) ProtoMessage() {}

func (x *EpInternalDecided) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalDecided.ProtoReflect.Descriptor instead.
func (*EpInternalDecided) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{22}
}

func (x *EpInternalDecided) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// EC
// In the Init event or constructor, initialize "trusted" with the max-rank process in PI
type EcInternalNack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EcInternalNack) Reset() {
	*x = EcInternalNack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcInternalNack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcInternalNack) ProtoMessage() {}

func (x *EcInternalNack) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcInternalNack.ProtoReflect.Descriptor instead.
func (*EcInternalNack) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{23}
}

type EcStartEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewTimestamp int32      `protobuf:"varint,1,opt,name=newTimestamp,proto3" json:"newTimestamp,omitempty"`
	NewLeader    *ProcessId `protobuf:"bytes,2,opt,name=newLeader,proto3" json:"newLeader,omitempty"`
}

func (x *EcStartEpoch) Reset() {
	*x = EcStartEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcStartEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcStartEpoch) ProtoMessage() {}

func (x *EcStartEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcStartEpoch.ProtoReflect.Descriptor instead.
func (*EcStartEpoch) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{24}
}

func (x *EcStartEpoch) GetNewTimestamp() int32 {
	if x != nil {
		return x.NewTimestamp
	}
	return 0
}

func (x *EcStartEpoch) GetNewLeader() *ProcessId {
	if x != nil {
		return x.NewLeader
	}
	return nil
}

type EcInternalNewEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *EcInternalNewEpoch) Reset() {
	*x = EcInternalNewEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcInternalNewEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcInternalNewEpoch) ProtoMessage() {}

func (x *EcInternalNewEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcInternalNewEpoch.ProtoReflect.Descriptor instead.
func (*EcInternalNewEpoch) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{25}
}

func (x *EcInternalNewEpoch) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// ELD
type EldTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EldTimeout) Reset() {
	*x = EldTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EldTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EldTimeout) ProtoMessage() {}

func (x *EldTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EldTimeout.ProtoReflect.Descriptor instead.
func (*EldTimeout) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{26}
}

type EldTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessId `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
}

func (x *EldTrust) Reset() {
	*x = EldTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EldTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EldTrust) ProtoMessage() {}

func (x *EldTrust) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EldTrust.ProtoReflect.Descriptor instead.
func (*EldTrust) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{27}
}

func (x *EldTrust) GetProcess() *ProcessId {
	if x != nil {
		return x.Process
	}
	return nil
}

// NNAR
type NnarRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NnarRead) Reset() {
	*x = NnarRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarRead) ProtoMessage() {}

func (x *NnarRead) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarRead.ProtoReflect.Descriptor instead.
func (*NnarRead) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{28}
}

type NnarInternalRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadId int32 `protobuf:"varint,1,opt,name=readId,proto3" json:"readId,omitempty"`
}

func (x *NnarInternalRead) Reset() {
	*x = NnarInternalRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarInternalRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarInternalRead) ProtoMessage() {}

func (x *NnarInternalRead) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarInternalRead.ProtoReflect.Descriptor instead.
func (*NnarInternalRead) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{29}
}

func (x *NnarInternalRead) GetReadId() int32 {
	if x != nil {
		return x.ReadId
	}
	return 0
}

type NnarInternalValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadId     int32  `protobuf:"varint,1,opt,name=readId,proto3" json:"readId,omitempty"`
	Timestamp  int32  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	WriterRank int32  `protobuf:"varint,3,opt,name=writerRank,proto3" json:"writerRank,omitempty"`
	Value      *Value `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NnarInternalValue) Reset() {
	*x = NnarInternalValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarInternalValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarInternalValue) ProtoMessage() {}

func (x *NnarInternalValue) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarInternalValue.ProtoReflect.Descriptor instead.
func (*NnarInternalValue) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{30}
}

func (x *NnarInternalValue) GetReadId() int32 {
	if x != nil {
		return x.ReadId
	}
	return 0
}

func (x *NnarInternalValue) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NnarInternalValue) GetWriterRank() int32 {
	if x != nil {
		return x.WriterRank
	}
	return 0
}

func (x *NnarInternalValue) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type NnarInternalWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadId     int32  `protobuf:"varint,1,opt,name=readId,proto3" json:"readId,omitempty"`
	Timestamp  int32  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	WriterRank int32  `protobuf:"varint,3,opt,name=writerRank,proto3" json:"writerRank,omitempty"`
	Value      *Value `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NnarInternalWrite) Reset() {
	*x = NnarInternalWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarInternalWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarInternalWrite) ProtoMessage() {}

func (x *NnarInternalWrite) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarInternalWrite.ProtoReflect.Descriptor instead.
func (*NnarInternalWrite) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{31}
}

func (x *NnarInternalWrite) GetReadId() int32 {
	if x != nil {
		return x.ReadId
	}
	return 0
}

func (x *NnarInternalWrite) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NnarInternalWrite) GetWriterRank() int32 {
	if x != nil {
		return x.WriterRank
	}
	return 0
}

func (x *NnarInternalWrite) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type NnarWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NnarWrite) Reset() {
	*x = NnarWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarWrite) ProtoMessage() {}

func (x *NnarWrite) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarWrite.ProtoReflect.Descriptor instead.
func (*NnarWrite) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{32}
}

func (x *NnarWrite) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type NnarInternalAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadId int32 `protobuf:"varint,1,opt,name=readId,proto3" json:"readId,omitempty"`
}

func (x *NnarInternalAck) Reset() {
	*x = NnarInternalAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarInternalAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarInternalAck) ProtoMessage() {}

func (x *NnarInternalAck) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarInternalAck.ProtoReflect.Descriptor instead.
func (*NnarInternalAck) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{33}
}

func (x *NnarInternalAck) GetReadId() int32 {
	if x != nil {
		return x.ReadId
	}
	return 0
}

type NnarReadReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NnarReadReturn) Reset() {
	*x = NnarReadReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarReadReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarReadReturn) ProtoMessage() {}

func (x *NnarReadReturn) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarReadReturn.ProtoReflect.Descriptor instead.
func (*NnarReadReturn) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{34}
}

func (x *NnarReadReturn) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type NnarWriteReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NnarWriteReturn) Reset() {
	*x = NnarWriteReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarWriteReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarWriteReturn) ProtoMessage() {}

func (x *NnarWriteReturn) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarWriteReturn.ProtoReflect.Descriptor instead.
func (*NnarWriteReturn) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{35}
}

// EPFD
// Use as timer delay "delta" 100 milliseconds
type EpfdTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpfdTimeout) Reset() {
	*x = EpfdTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdTimeout) ProtoMessage() {}

func (x *EpfdTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdTimeout.ProtoReflect.Descriptor instead.
func (*EpfdTimeout) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{36}
}

type EpfdInternalHeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpfdInternalHeartbeatRequest) Reset() {
	*x = EpfdInternalHeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdInternalHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdInternalHeartbeatRequest) ProtoMessage() {}

func (x *EpfdInternalHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdInternalHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*EpfdInternalHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{37}
}

type EpfdInternalHeartbeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpfdInternalHeartbeatReply) Reset() {
	*x = EpfdInternalHeartbeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdInternalHeartbeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdInternalHeartbeatReply) ProtoMessage() {}

func (x *EpfdInternalHeartbeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdInternalHeartbeatReply.ProtoReflect.Descriptor instead.
func (*EpfdInternalHeartbeatReply) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{38}
}

type EpfdSuspect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessId `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
}

func (x *EpfdSuspect) Reset() {
	*x = EpfdSuspect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdSuspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdSuspect) ProtoMessage() {}

func (x *EpfdSuspect) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdSuspect.ProtoReflect.Descriptor instead.
func (*EpfdSuspect) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{39}
}

func (x *EpfdSuspect) GetProcess() *ProcessId {
	if x != nil {
		return x.Process
	}
	return nil
}

type EpfdRestore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessId `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
}

func (x *EpfdRestore) Reset() {
	*x = EpfdRestore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdRestore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdRestore) ProtoMessage() {}

func (x *EpfdRestore) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdRestore.ProtoReflect.Descriptor instead.
func (*EpfdRestore) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{40}
}

func (x *EpfdRestore) GetProcess() *ProcessId {
	if x != nil {
		return x.Process
	}
	return nil
}

// PL
type PlSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination *ProcessId `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	// Types that are assignable to Content:
	//
	//	*PlSend_ProcRegistration
	//	*PlSend_ProcInitializeSystem
	//	*PlSend_ProcDestroySystem
	//	*PlSend_AppBroadcast
	//	*PlSend_AppPropose
	//	*PlSend_AppDecide
	//	*PlSend_AppRead
	//	*PlSend_AppWrite
	//	*PlSend_AppReadReturn
	//	*PlSend_AppWriteReturn
	//	*PlSend_UcDecide
	//	*PlSend_UcPropose
	//	*PlSend_EpAbort
	//	*PlSend_EpAborted
	//	*PlSend_EpInternalAccept
	//	*PlSend_EpDecide
	//	*PlSend_EpInternalDecided
	//	*PlSend_EpPropose
	//	*PlSend_EpInternalRead
	//	*PlSend_EpInternalState
	//	*PlSend_EpInternalWrite
	//	*PlSend_EcInternalNack
	//	*PlSend_EcInternalNewEpoch
	//	*PlSend_EcStartEpoch
	//	*PlSend_BebBroadcast
	//	*PlSend_BebDeliver
	//	*PlSend_EldTimeout
	//	*PlSend_EldTrust
	//	*PlSend_NnarInternalAck
	//	*PlSend_NnarInternalRead
	//	*PlSend_NnarInternalValue
	//	*PlSend_NnarInternalWrite
	//	*PlSend_NnarRead
	//	*PlSend_NnarReadReturn
	//	*PlSend_NnarWrite
	//	*PlSend_NnarWriteReturn
	//	*PlSend_EpfdTimeout
	//	*PlSend_EpfdInternalHeartbeatRequest
	//	*PlSend_EpfdInternalHeartbeatReply
	//	*PlSend_EpfdSuspect
	//	*PlSend_EpfdRestore
	//	*PlSend_PlDeliver
	//	*PlSend_PlSend
	Content isPlSend_Content `protobuf_oneof:"content"`
}

func (x *PlSend) Reset() {
	*x = PlSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlSend) ProtoMessage() {}

func (x *PlSend) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlSend.ProtoReflect.Descriptor instead.
func (*PlSend) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{41}
}

func (x *PlSend) GetDestination() *ProcessId {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (m *PlSend) GetContent() isPlSend_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *PlSend) GetProcRegistration() *ProcRegistration {
	if x, ok := x.GetContent().(*PlSend_ProcRegistration); ok {
		return x.ProcRegistration
	}
	return nil
}

func (x *PlSend) GetProcInitializeSystem() *ProcInitializeSystem {
	if x, ok := x.GetContent().(*PlSend_ProcInitializeSystem); ok {
		return x.ProcInitializeSystem
	}
	return nil
}

func (x *PlSend) GetProcDestroySystem() *ProcDestroySystem {
	if x, ok := x.GetContent().(*PlSend_ProcDestroySystem); ok {
		return x.ProcDestroySystem
	}
	return nil
}

func (x *PlSend) GetAppBroadcast() *AppBroadcast {
	if x, ok := x.GetContent().(*PlSend_AppBroadcast); ok {
		return x.AppBroadcast
	}
	return nil
}

func (x *PlSend) GetAppPropose() *AppPropose {
	if x, ok := x.GetContent().(*PlSend_AppPropose); ok {
		return x.AppPropose
	}
	return nil
}

func (x *PlSend) GetAppDecide() *AppDecide {
	if x, ok := x.GetContent().(*PlSend_AppDecide); ok {
		return x.AppDecide
	}
	return nil
}

func (x *PlSend) GetAppRead() *AppRead {
	if x, ok := x.GetContent().(*PlSend_AppRead); ok {
		return x.AppRead
	}
	return nil
}

func (x *PlSend) GetAppWrite() *AppWrite {
	if x, ok := x.GetContent().(*PlSend_AppWrite); ok {
		return x.AppWrite
	}
	return nil
}

func (x *PlSend) GetAppReadReturn() *AppReadReturn {
	if x, ok := x.GetContent().(*PlSend_AppReadReturn); ok {
		return x.AppReadReturn
	}
	return nil
}

func (x *PlSend) GetAppWriteReturn() *AppWriteReturn {
	if x, ok := x.GetContent().(*PlSend_AppWriteReturn); ok {
		return x.AppWriteReturn
	}
	return nil
}

func (x *PlSend) GetUcDecide() *UcDecide {
	if x, ok := x.GetContent().(*PlSend_UcDecide); ok {
		return x.UcDecide
	}
	return nil
}

func (x *PlSend) GetUcPropose() *UcPropose {
	if x, ok := x.GetContent().(*PlSend_UcPropose); ok {
		return x.UcPropose
	}
	return nil
}

func (x *PlSend) GetEpAbort() *EpAbort {
	if x, ok := x.GetContent().(*PlSend_EpAbort); ok {
		return x.EpAbort
	}
	return nil
}

func (x *PlSend) GetEpAborted() *EpAborted {
	if x, ok := x.GetContent().(*PlSend_EpAborted); ok {
		return x.EpAborted
	}
	return nil
}

func (x *PlSend) GetEpInternalAccept() *EpInternalAccept {
	if x, ok := x.GetContent().(*PlSend_EpInternalAccept); ok {
		return x.EpInternalAccept
	}
	return nil
}

func (x *PlSend) GetEpDecide() *EpDecide {
	if x, ok := x.GetContent().(*PlSend_EpDecide); ok {
		return x.EpDecide
	}
	return nil
}

func (x *PlSend) GetEpInternalDecided() *EpInternalDecided {
	if x, ok := x.GetContent().(*PlSend_EpInternalDecided); ok {
		return x.EpInternalDecided
	}
	return nil
}

func (x *PlSend) GetEpPropose() *EpPropose {
	if x, ok := x.GetContent().(*PlSend_EpPropose); ok {
		return x.EpPropose
	}
	return nil
}

func (x *PlSend) GetEpInternalRead() *EpInternalRead {
	if x, ok := x.GetContent().(*PlSend_EpInternalRead); ok {
		return x.EpInternalRead
	}
	return nil
}

func (x *PlSend) GetEpInternalState() *EpInternalState {
	if x, ok := x.GetContent().(*PlSend_EpInternalState); ok {
		return x.EpInternalState
	}
	return nil
}

func (x *PlSend) GetEpInternalWrite() *EpInternalWrite {
	if x, ok := x.GetContent().(*PlSend_EpInternalWrite); ok {
		return x.EpInternalWrite
	}
	return nil
}

func (x *PlSend) GetEcInternalNack() *EcInternalNack {
	if x, ok := x.GetContent().(*PlSend_EcInternalNack); ok {
		return x.EcInternalNack
	}
	return nil
}

func (x *PlSend) GetEcInternalNewEpoch() *EcInternalNewEpoch {
	if x, ok := x.GetContent().(*PlSend_EcInternalNewEpoch); ok {
		return x.EcInternalNewEpoch
	}
	return nil
}

func (x *PlSend) GetEcStartEpoch() *EcStartEpoch {
	if x, ok := x.GetContent().(*PlSend_EcStartEpoch); ok {
		return x.EcStartEpoch
	}
	return nil
}

func (x *PlSend) GetBebBroadcast() *BebBroadcast {
	if x, ok := x.GetContent().(*PlSend_BebBroadcast); ok {
		return x.BebBroadcast
	}
	return nil
}

func (x *PlSend) GetBebDeliver() *BebDeliver {
	if x, ok := x.GetContent().(*PlSend_BebDeliver); ok {
		return x.BebDeliver
	}
	return nil
}

func (x *PlSend) GetEldTimeout() *EldTimeout {
	if x, ok := x.GetContent().(*PlSend_EldTimeout); ok {
		return x.EldTimeout
	}
	return nil
}

func (x *PlSend) GetEldTrust() *EldTrust {
	if x, ok := x.GetContent().(*PlSend_EldTrust); ok {
		return x.EldTrust
	}
	return nil
}

func (x *PlSend) GetNnarInternalAck() *NnarInternalAck {
	if x, ok := x.GetContent().(*PlSend_NnarInternalAck); ok {
		return x.NnarInternalAck
	}
	return nil
}

func (x *PlSend) GetNnarInternalRead() *NnarInternalRead {
	if x, ok := x.GetContent().(*PlSend_NnarInternalRead); ok {
		return x.NnarInternalRead
	}
	return nil
}

func (x *PlSend) GetNnarInternalValue() *NnarInternalValue {
	if x, ok := x.GetContent().(*PlSend_NnarInternalValue); ok {
		return x.NnarInternalValue
	}
	return nil
}

func (x *PlSend) GetNnarInternalWrite() *NnarInternalWrite {
	if x, ok := x.GetContent().(*PlSend_NnarInternalWrite); ok {
		return x.NnarInternalWrite
	}
	return nil
}

func (x *PlSend) GetNnarRead() *NnarRead {
	if x, ok := x.GetContent().(*PlSend_NnarRead); ok {
		return x.NnarRead
	}
	return nil
}

func (x *PlSend) GetNnarReadReturn() *NnarReadReturn {
	if x, ok := x.GetContent().(*PlSend_NnarReadReturn); ok {
		return x.NnarReadReturn
	}
	return nil
}

func (x *PlSend) GetNnarWrite() *NnarWrite {
	if x, ok := x.GetContent().(*PlSend_NnarWrite); ok {
		return x.NnarWrite
	}
	return nil
}

func (x *PlSend) GetNnarWriteReturn() *NnarWriteReturn {
	if x, ok := x.GetContent().(*PlSend_NnarWriteReturn); ok {
		return x.NnarWriteReturn
	}
	return nil
}

func (x *PlSend) GetEpfdTimeout() *EpfdTimeout {
	if x, ok := x.GetContent().(*PlSend_EpfdTimeout); ok {
		return x.EpfdTimeout
	}
	return nil
}

func (x *PlSend) GetEpfdInternalHeartbeatRequest() *EpfdInternalHeartbeatRequest {
	if x, ok := x.GetContent().(*PlSend_EpfdInternalHeartbeatRequest); ok {
		return x.EpfdInternalHeartbeatRequest
	}
	return nil
}

func (x *PlSend) GetEpfdInternalHeartbeatReply() *EpfdInternalHeartbeatReply {
	if x, ok := x.GetContent().(*PlSend_EpfdInternalHeartbeatReply); ok {
		return x.EpfdInternalHeartbeatReply
	}
	return nil
}

func (x *PlSend) GetEpfdSuspect() *EpfdSuspect {
	if x, ok := x.GetContent().(*PlSend_EpfdSuspect); ok {
		return x.EpfdSuspect
	}
	return nil
}

func (x *PlSend) GetEpfdRestore() *EpfdRestore {
	if x, ok := x.GetContent().(*PlSend_EpfdRestore); ok {
		return x.EpfdRestore
	}
	return nil
}

func (x *PlSend) GetPlDeliver() *PlDeliver {
	if x, ok := x.GetContent().(*PlSend_PlDeliver); ok {
		return x.PlDeliver
	}
	return nil
}

func (x *PlSend) GetPlSend() *PlSend {
	if x, ok := x.GetContent().(*PlSend_PlSend); ok {
		return x.PlSend
	}
	return nil
}

type isPlSend_Content interface {
	isPlSend_Content()
}

type PlSend_ProcRegistration struct {
	ProcRegistration *ProcRegistration `protobuf:"bytes,7,opt,name=procRegistration,proto3,oneof"`
}

type PlSend_ProcInitializeSystem struct {
	ProcInitializeSystem *ProcInitializeSystem `protobuf:"bytes,8,opt,name=procInitializeSystem,proto3,oneof"`
}

type PlSend_ProcDestroySystem struct {
	ProcDestroySystem *ProcDestroySystem `protobuf:"bytes,9,opt,name=procDestroySystem,proto3,oneof"`
}

type PlSend_AppBroadcast struct {
	AppBroadcast *AppBroadcast `protobuf:"bytes,10,opt,name=appBroadcast,proto3,oneof"`
}

type PlSend_AppPropose struct {
	AppPropose *AppPropose `protobuf:"bytes,12,opt,name=appPropose,proto3,oneof"`
}

type PlSend_AppDecide struct {
	AppDecide *AppDecide `protobuf:"bytes,13,opt,name=appDecide,proto3,oneof"`
}

type PlSend_AppRead struct {
	AppRead *AppRead `protobuf:"bytes,14,opt,name=appRead,proto3,oneof"`
}

type PlSend_AppWrite struct {
	AppWrite *AppWrite `protobuf:"bytes,15,opt,name=appWrite,proto3,oneof"`
}

type PlSend_AppReadReturn struct {
	AppReadReturn *AppReadReturn `protobuf:"bytes,16,opt,name=appReadReturn,proto3,oneof"`
}

type PlSend_AppWriteReturn struct {
	AppWriteReturn *AppWriteReturn `protobuf:"bytes,17,opt,name=appWriteReturn,proto3,oneof"`
}

type PlSend_UcDecide struct {
	UcDecide *UcDecide `protobuf:"bytes,20,opt,name=ucDecide,proto3,oneof"`
}

type PlSend_UcPropose struct {
	UcPropose *UcPropose `protobuf:"bytes,21,opt,name=ucPropose,proto3,oneof"`
}

type PlSend_EpAbort struct {
	EpAbort *EpAbort `protobuf:"bytes,30,opt,name=epAbort,proto3,oneof"`
}

type PlSend_EpAborted struct {
	EpAborted *EpAborted `protobuf:"bytes,31,opt,name=epAborted,proto3,oneof"`
}

type PlSend_EpInternalAccept struct {
	EpInternalAccept *EpInternalAccept `protobuf:"bytes,32,opt,name=epInternalAccept,proto3,oneof"`
}

type PlSend_EpDecide struct {
	EpDecide *EpDecide `protobuf:"bytes,33,opt,name=epDecide,proto3,oneof"`
}

type PlSend_EpInternalDecided struct {
	EpInternalDecided *EpInternalDecided `protobuf:"bytes,34,opt,name=epInternalDecided,proto3,oneof"`
}

type PlSend_EpPropose struct {
	EpPropose *EpPropose `protobuf:"bytes,35,opt,name=epPropose,proto3,oneof"`
}

type PlSend_EpInternalRead struct {
	EpInternalRead *EpInternalRead `protobuf:"bytes,36,opt,name=epInternalRead,proto3,oneof"`
}

type PlSend_EpInternalState struct {
	EpInternalState *EpInternalState `protobuf:"bytes,37,opt,name=epInternalState,proto3,oneof"`
}

type PlSend_EpInternalWrite struct {
	EpInternalWrite *EpInternalWrite `protobuf:"bytes,38,opt,name=epInternalWrite,proto3,oneof"`
}

type PlSend_EcInternalNack struct {
	EcInternalNack *EcInternalNack `protobuf:"bytes,41,opt,name=ecInternalNack,proto3,oneof"`
}

type PlSend_EcInternalNewEpoch struct {
	EcInternalNewEpoch *EcInternalNewEpoch `protobuf:"bytes,42,opt,name=ecInternalNewEpoch,proto3,oneof"`
}

type PlSend_EcStartEpoch struct {
	EcStartEpoch *EcStartEpoch `protobuf:"bytes,43,opt,name=ecStartEpoch,proto3,oneof"`
}

type PlSend_BebBroadcast struct {
	BebBroadcast *BebBroadcast `protobuf:"bytes,50,opt,name=bebBroadcast,proto3,oneof"`
}

type PlSend_BebDeliver struct {
	BebDeliver *BebDeliver `protobuf:"bytes,51,opt,name=bebDeliver,proto3,oneof"`
}

type PlSend_EldTimeout struct {
	EldTimeout *EldTimeout `protobuf:"bytes,60,opt,name=eldTimeout,proto3,oneof"`
}

type PlSend_EldTrust struct {
	EldTrust *EldTrust `protobuf:"bytes,61,opt,name=eldTrust,proto3,oneof"`
}

type PlSend_NnarInternalAck struct {
	NnarInternalAck *NnarInternalAck `protobuf:"bytes,70,opt,name=nnarInternalAck,proto3,oneof"`
}

type PlSend_NnarInternalRead struct {
	NnarInternalRead *NnarInternalRead `protobuf:"bytes,71,opt,name=nnarInternalRead,proto3,oneof"`
}

type PlSend_NnarInternalValue struct {
	NnarInternalValue *NnarInternalValue `protobuf:"bytes,72,opt,name=nnarInternalValue,proto3,oneof"`
}

type PlSend_NnarInternalWrite struct {
	NnarInternalWrite *NnarInternalWrite `protobuf:"bytes,73,opt,name=nnarInternalWrite,proto3,oneof"`
}

type PlSend_NnarRead struct {
	NnarRead *NnarRead `protobuf:"bytes,74,opt,name=nnarRead,proto3,oneof"`
}

type PlSend_NnarReadReturn struct {
	NnarReadReturn *NnarReadReturn `protobuf:"bytes,75,opt,name=nnarReadReturn,proto3,oneof"`
}

type PlSend_NnarWrite struct {
	NnarWrite *NnarWrite `protobuf:"bytes,76,opt,name=nnarWrite,proto3,oneof"`
}

type PlSend_NnarWriteReturn struct {
	NnarWriteReturn *NnarWriteReturn `protobuf:"bytes,77,opt,name=nnarWriteReturn,proto3,oneof"`
}

type PlSend_EpfdTimeout struct {
	EpfdTimeout *EpfdTimeout `protobuf:"bytes,80,opt,name=epfdTimeout,proto3,oneof"`
}

type PlSend_EpfdInternalHeartbeatRequest struct {
	EpfdInternalHeartbeatRequest *EpfdInternalHeartbeatRequest `protobuf:"bytes,81,opt,name=epfdInternalHeartbeatRequest,proto3,oneof"`
}

type PlSend_EpfdInternalHeartbeatReply struct {
	EpfdInternalHeartbeatReply *EpfdInternalHeartbeatReply `protobuf:"bytes,82,opt,name=epfdInternalHeartbeatReply,proto3,oneof"`
}

type PlSend_EpfdSuspect struct {
	EpfdSuspect *EpfdSuspect `protobuf:"bytes,83,opt,name=epfdSuspect,proto3,oneof"`
}

type PlSend_EpfdRestore struct {
	EpfdRestore *EpfdRestore `protobuf:"bytes,84,opt,name=epfdRestore,proto3,oneof"`
}

type PlSend_PlDeliver struct {
	PlDeliver *PlDeliver `protobuf:"bytes,90,opt,name=plDeliver,proto3,oneof"`
}

type PlSend_PlSend struct {
	PlSend *PlSend `protobuf:"bytes,91,opt,name=plSend,proto3,oneof"`
}

func (*PlSend_ProcRegistration) isPlSend_Content() {}

func (*PlSend_ProcInitializeSystem) isPlSend_Content() {}

func (*PlSend_ProcDestroySystem) isPlSend_Content() {}

func (*PlSend_AppBroadcast) isPlSend_Content() {}

func (*PlSend_AppPropose) isPlSend_Content() {}

func (*PlSend_AppDecide) isPlSend_Content() {}

func (*PlSend_AppRead) isPlSend_Content() {}

func (*PlSend_AppWrite) isPlSend_Content() {}

func (*PlSend_AppReadReturn) isPlSend_Content() {}

func (*PlSend_AppWriteReturn) isPlSend_Content() {}

func (*PlSend_UcDecide) isPlSend_Content() {}

func (*PlSend_UcPropose) isPlSend_Content() {}

func (*PlSend_EpAbort) isPlSend_Content() {}

func (*PlSend_EpAborted) isPlSend_Content() {}

func (*PlSend_EpInternalAccept) isPlSend_Content() {}

func (*PlSend_EpDecide) isPlSend_Content() {}

func (*PlSend_EpInternalDecided) isPlSend_Content() {}

func (*PlSend_EpPropose) isPlSend_Content() {}

func (*PlSend_EpInternalRead) isPlSend_Content() {}

func (*PlSend_EpInternalState) isPlSend_Content() {}

func (*PlSend_EpInternalWrite) isPlSend_Content() {}

func (*PlSend_EcInternalNack) isPlSend_Content() {}

func (*PlSend_EcInternalNewEpoch) isPlSend_Content() {}

func (*PlSend_EcStartEpoch) isPlSend_Content() {}

func (*PlSend_BebBroadcast) isPlSend_Content() {}

func (*PlSend_BebDeliver) isPlSend_Content() {}

func (*PlSend_EldTimeout) isPlSend_Content() {}

func (*PlSend_EldTrust) isPlSend_Content() {}

func (*PlSend_NnarInternalAck) isPlSend_Content() {}

func (*PlSend_NnarInternalRead) isPlSend_Content() {}

func (*PlSend_NnarInternalValue) isPlSend_Content() {}

func (*PlSend_NnarInternalWrite) isPlSend_Content() {}

func (*PlSend_NnarRead) isPlSend_Content() {}

func (*PlSend_NnarReadReturn) isPlSend_Content() {}

func (*PlSend_NnarWrite) isPlSend_Content() {}

func (*PlSend_NnarWriteReturn) isPlSend_Content() {}

func (*PlSend_EpfdTimeout) isPlSend_Content() {}

func (*PlSend_EpfdInternalHeartbeatRequest) isPlSend_Content() {}

func (*PlSend_EpfdInternalHeartbeatReply) isPlSend_Content() {}

func (*PlSend_EpfdSuspect) isPlSend_Content() {}

func (*PlSend_EpfdRestore) isPlSend_Content() {}

func (*PlSend_PlDeliver) isPlSend_Content() {}

func (*PlSend_PlSend) isPlSend_Content() {}

type PlDeliver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender *ProcessId `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// Types that are assignable to Content:
	//
	//	*PlDeliver_ProcRegistration
	//	*PlDeliver_ProcInitializeSystem
	//	*PlDeliver_ProcDestroySystem
	//	*PlDeliver_AppBroadcast
	//	*PlDeliver_AppPropose
	//	*PlDeliver_AppDecide
	//	*PlDeliver_AppRead
	//	*PlDeliver_AppWrite
	//	*PlDeliver_AppReadReturn
	//	*PlDeliver_AppWriteReturn
	//	*PlDeliver_UcDecide
	//	*PlDeliver_UcPropose
	//	*PlDeliver_EpAbort
	//	*PlDeliver_EpAborted
	//	*PlDeliver_EpInternalAccept
	//	*PlDeliver_EpDecide
	//	*PlDeliver_EpInternalDecided
	//	*PlDeliver_EpPropose
	//	*PlDeliver_EpInternalRead
	//	*PlDeliver_EpInternalState
	//	*PlDeliver_EpInternalWrite
	//	*PlDeliver_EcInternalNack
	//	*PlDeliver_EcInternalNewEpoch
	//	*PlDeliver_EcStartEpoch
	//	*PlDeliver_BebBroadcast
	//	*PlDeliver_BebDeliver
	//	*PlDeliver_EldTimeout
	//	*PlDeliver_EldTrust
	//	*PlDeliver_NnarInternalAck
	//	*PlDeliver_NnarInternalRead
	//	*PlDeliver_NnarInternalValue
	//	*PlDeliver_NnarInternalWrite
	//	*PlDeliver_NnarRead
	//	*PlDeliver_NnarReadReturn
	//	*PlDeliver_NnarWrite
	//	*PlDeliver_NnarWriteReturn
	//	*PlDeliver_EpfdTimeout
	//	*PlDeliver_EpfdInternalHeartbeatRequest
	//	*PlDeliver_EpfdInternalHeartbeatReply
	//	*PlDeliver_EpfdSuspect
	//	*PlDeliver_EpfdRestore
	//	*PlDeliver_PlDeliver
	//	*PlDeliver_PlSend
	Content isPlDeliver_Content `protobuf_oneof:"content"`
}

func (x *PlDeliver) Reset() {
	*x = PlDeliver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlDeliver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlDeliver) ProtoMessage() {}

func (x *PlDeliver) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlDeliver.ProtoReflect.Descriptor instead.
func (*PlDeliver) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{42}
}

func (x *PlDeliver) GetSender() *ProcessId {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (m *PlDeliver) GetContent() isPlDeliver_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *PlDeliver) GetProcRegistration() *ProcRegistration {
	if x, ok := x.GetContent().(*PlDeliver_ProcRegistration); ok {
		return x.ProcRegistration
	}
	return nil
}

func (x *PlDeliver) GetProcInitializeSystem() *ProcInitializeSystem {
	if x, ok := x.GetContent().(*PlDeliver_ProcInitializeSystem); ok {
		return x.ProcInitializeSystem
	}
	return nil
}

func (x *PlDeliver) GetProcDestroySystem() *ProcDestroySystem {
	if x, ok := x.GetContent().(*PlDeliver_ProcDestroySystem); ok {
		return x.ProcDestroySystem
	}
	return nil
}

func (x *PlDeliver) GetAppBroadcast() *AppBroadcast {
	if x, ok := x.GetContent().(*PlDeliver_AppBroadcast); ok {
		return x.AppBroadcast
	}
	return nil
}

func (x *PlDeliver) GetAppPropose() *AppPropose {
	if x, ok := x.GetContent().(*PlDeliver_AppPropose); ok {
		return x.AppPropose
	}
	return nil
}

func (x *PlDeliver) GetAppDecide() *AppDecide {
	if x, ok := x.GetContent().(*PlDeliver_AppDecide); ok {
		return x.AppDecide
	}
	return nil
}

func (x *PlDeliver) GetAppRead() *AppRead {
	if x, ok := x.GetContent().(*PlDeliver_AppRead); ok {
		return x.AppRead
	}
	return nil
}

func (x *PlDeliver) GetAppWrite() *AppWrite {
	if x, ok := x.GetContent().(*PlDeliver_AppWrite); ok {
		return x.AppWrite
	}
	return nil
}

func (x *PlDeliver) GetAppReadReturn() *AppReadReturn {
	if x, ok := x.GetContent().(*PlDeliver_AppReadReturn); ok {
		return x.AppReadReturn
	}
	return nil
}

func (x *PlDeliver) GetAppWriteReturn() *AppWriteReturn {
	if x, ok := x.GetContent().(*PlDeliver_AppWriteReturn); ok {
		return x.AppWriteReturn
	}
	return nil
}

func (x *PlDeliver) GetUcDecide() *UcDecide {
	if x, ok := x.GetContent().(*PlDeliver_UcDecide); ok {
		return x.UcDecide
	}
	return nil
}

func (x *PlDeliver) GetUcPropose() *UcPropose {
	if x, ok := x.GetContent().(*PlDeliver_UcPropose); ok {
		return x.UcPropose
	}
	return nil
}

func (x *PlDeliver) GetEpAbort() *EpAbort {
	if x, ok := x.GetContent().(*PlDeliver_EpAbort); ok {
		return x.EpAbort
	}
	return nil
}

func (x *PlDeliver) GetEpAborted() *EpAborted {
	if x, ok := x.GetContent().(*PlDeliver_EpAborted); ok {
		return x.EpAborted
	}
	return nil
}

func (x *PlDeliver) GetEpInternalAccept() *EpInternalAccept {
	if x, ok := x.GetContent().(*PlDeliver_EpInternalAccept); ok {
		return x.EpInternalAccept
	}
	return nil
}

func (x *PlDeliver) GetEpDecide() *EpDecide {
	if x, ok := x.GetContent().(*PlDeliver_EpDecide); ok {
		return x.EpDecide
	}
	return nil
}

func (x *PlDeliver) GetEpInternalDecided() *EpInternalDecided {
	if x, ok := x.GetContent().(*PlDeliver_EpInternalDecided); ok {
		return x.EpInternalDecided
	}
	return nil
}

func (x *PlDeliver) GetEpPropose() *EpPropose {
	if x, ok := x.GetContent().(*PlDeliver_EpPropose); ok {
		return x.EpPropose
	}
	return nil
}

func (x *PlDeliver) GetEpInternalRead() *EpInternalRead {
	if x, ok := x.GetContent().(*PlDeliver_EpInternalRead); ok {
		return x.EpInternalRead
	}
	return nil
}

func (x *PlDeliver) GetEpInternalState() *EpInternalState {
	if x, ok := x.GetContent().(*PlDeliver_EpInternalState); ok {
		return x.EpInternalState
	}
	return nil
}

func (x *PlDeliver) GetEpInternalWrite() *EpInternalWrite {
	if x, ok := x.GetContent().(*PlDeliver_EpInternalWrite); ok {
		return x.EpInternalWrite
	}
	return nil
}

func (x *PlDeliver) GetEcInternalNack() *EcInternalNack {
	if x, ok := x.GetContent().(*PlDeliver_EcInternalNack); ok {
		return x.EcInternalNack
	}
	return nil
}

func (x *PlDeliver) GetEcInternalNewEpoch() *EcInternalNewEpoch {
	if x, ok := x.GetContent().(*PlDeliver_EcInternalNewEpoch); ok {
		return x.EcInternalNewEpoch
	}
	return nil
}

func (x *PlDeliver) GetEcStartEpoch() *EcStartEpoch {
	if x, ok := x.GetContent().(*PlDeliver_EcStartEpoch); ok {
		return x.EcStartEpoch
	}
	return nil
}

func (x *PlDeliver) GetBebBroadcast() *BebBroadcast {
	if x, ok := x.GetContent().(*PlDeliver_BebBroadcast); ok {
		return x.BebBroadcast
	}
	return nil
}

func (x *PlDeliver) GetBebDeliver() *BebDeliver {
	if x, ok := x.GetContent().(*PlDeliver_BebDeliver); ok {
		return x.BebDeliver
	}
	return nil
}

func (x *PlDeliver) GetEldTimeout() *EldTimeout {
	if x, ok := x.GetContent().(*PlDeliver_EldTimeout); ok {
		return x.EldTimeout
	}
	return nil
}

func (x *PlDeliver) GetEldTrust() *EldTrust {
	if x, ok := x.GetContent().(*PlDeliver_EldTrust); ok {
		return x.EldTrust
	}
	return nil
}

func (x *PlDeliver) GetNnarInternalAck() *NnarInternalAck {
	if x, ok := x.GetContent().(*PlDeliver_NnarInternalAck); ok {
		return x.NnarInternalAck
	}
	return nil
}

func (x *PlDeliver) GetNnarInternalRead() *NnarInternalRead {
	if x, ok := x.GetContent().(*PlDeliver_NnarInternalRead); ok {
		return x.NnarInternalRead
	}
	return nil
}

func (x *PlDeliver) GetNnarInternalValue() *NnarInternalValue {
	if x, ok := x.GetContent().(*PlDeliver_NnarInternalValue); ok {
		return x.NnarInternalValue
	}
	return nil
}

func (x *PlDeliver) GetNnarInternalWrite() *NnarInternalWrite {
	if x, ok := x.GetContent().(*PlDeliver_NnarInternalWrite); ok {
		return x.NnarInternalWrite
	}
	return nil
}

func (x *PlDeliver) GetNnarRead() *NnarRead {
	if x, ok := x.GetContent().(*PlDeliver_NnarRead); ok {
		return x.NnarRead
	}
	return nil
}

func (x *PlDeliver) GetNnarReadReturn() *NnarReadReturn {
	if x, ok := x.GetContent().(*PlDeliver_NnarReadReturn); ok {
		return x.NnarReadReturn
	}
	return nil
}

func (x *PlDeliver) GetNnarWrite() *NnarWrite {
	if x, ok := x.GetContent().(*PlDeliver_NnarWrite); ok {
		return x.NnarWrite
	}
	return nil
}

func (x *PlDeliver) GetNnarWriteReturn() *NnarWriteReturn {
	if x, ok := x.GetContent().(*PlDeliver_NnarWriteReturn); ok {
		return x.NnarWriteReturn
	}
	return nil
}

func (x *PlDeliver) GetEpfdTimeout() *EpfdTimeout {
	if x, ok := x.GetContent().(*PlDeliver_EpfdTimeout); ok {
		return x.EpfdTimeout
	}
	return nil
}

func (x *PlDeliver) GetEpfdInternalHeartbeatRequest() *EpfdInternalHeartbeatRequest {
	if x, ok := x.GetContent().(*PlDeliver_EpfdInternalHeartbeatRequest); ok {
		return x.EpfdInternalHeartbeatRequest
	}
	return nil
}

func (x *PlDeliver) GetEpfdInternalHeartbeatReply() *EpfdInternalHeartbeatReply {
	if x, ok := x.GetContent().(*PlDeliver_EpfdInternalHeartbeatReply); ok {
		return x.EpfdInternalHeartbeatReply
	}
	return nil
}

func (x *PlDeliver) GetEpfdSuspect() *EpfdSuspect {
	if x, ok := x.GetContent().(*PlDeliver_EpfdSuspect); ok {
		return x.EpfdSuspect
	}
	return nil
}

func (x *PlDeliver) GetEpfdRestore() *EpfdRestore {
	if x, ok := x.GetContent().(*PlDeliver_EpfdRestore); ok {
		return x.EpfdRestore
	}
	return nil
}

func (x *PlDeliver) GetPlDeliver() *PlDeliver {
	if x, ok := x.GetContent().(*PlDeliver_PlDeliver); ok {
		return x.PlDeliver
	}
	return nil
}

func (x *PlDeliver) GetPlSend() *PlSend {
	if x, ok := x.GetContent().(*PlDeliver_PlSend); ok {
		return x.PlSend
	}
	return nil
}

type isPlDeliver_Content interface {
	isPlDeliver_Content()
}

type PlDeliver_ProcRegistration struct {
	ProcRegistration *ProcRegistration `protobuf:"bytes,7,opt,name=procRegistration,proto3,oneof"`
}

type PlDeliver_ProcInitializeSystem struct {
	ProcInitializeSystem *ProcInitializeSystem `protobuf:"bytes,8,opt,name=procInitializeSystem,proto3,oneof"`
}

type PlDeliver_ProcDestroySystem struct {
	ProcDestroySystem *ProcDestroySystem `protobuf:"bytes,9,opt,name=procDestroySystem,proto3,oneof"`
}

type PlDeliver_AppBroadcast struct {
	AppBroadcast *AppBroadcast `protobuf:"bytes,10,opt,name=appBroadcast,proto3,oneof"`
}

type PlDeliver_AppPropose struct {
	AppPropose *AppPropose `protobuf:"bytes,12,opt,name=appPropose,proto3,oneof"`
}

type PlDeliver_AppDecide struct {
	AppDecide *AppDecide `protobuf:"bytes,13,opt,name=appDecide,proto3,oneof"`
}

type PlDeliver_AppRead struct {
	AppRead *AppRead `protobuf:"bytes,14,opt,name=appRead,proto3,oneof"`
}

type PlDeliver_AppWrite struct {
	AppWrite *AppWrite `protobuf:"bytes,15,opt,name=appWrite,proto3,oneof"`
}

type PlDeliver_AppReadReturn struct {
	AppReadReturn *AppReadReturn `protobuf:"bytes,16,opt,name=appReadReturn,proto3,oneof"`
}

type PlDeliver_AppWriteReturn struct {
	AppWriteReturn *AppWriteReturn `protobuf:"bytes,17,opt,name=appWriteReturn,proto3,oneof"`
}

type PlDeliver_UcDecide struct {
	UcDecide *UcDecide `protobuf:"bytes,20,opt,name=ucDecide,proto3,oneof"`
}

type PlDeliver_UcPropose struct {
	UcPropose *UcPropose `protobuf:"bytes,21,opt,name=ucPropose,proto3,oneof"`
}

type PlDeliver_EpAbort struct {
	EpAbort *EpAbort `protobuf:"bytes,30,opt,name=epAbort,proto3,oneof"`
}

type PlDeliver_EpAborted struct {
	EpAborted *EpAborted `protobuf:"bytes,31,opt,name=epAborted,proto3,oneof"`
}

type PlDeliver_EpInternalAccept struct {
	EpInternalAccept *EpInternalAccept `protobuf:"bytes,32,opt,name=epInternalAccept,proto3,oneof"`
}

type PlDeliver_EpDecide struct {
	EpDecide *EpDecide `protobuf:"bytes,33,opt,name=epDecide,proto3,oneof"`
}

type PlDeliver_EpInternalDecided struct {
	EpInternalDecided *EpInternalDecided `protobuf:"bytes,34,opt,name=epInternalDecided,proto3,oneof"`
}

type PlDeliver_EpPropose struct {
	EpPropose *EpPropose `protobuf:"bytes,35,opt,name=epPropose,proto3,oneof"`
}

type PlDeliver_EpInternalRead struct {
	EpInternalRead *EpInternalRead `protobuf:"bytes,36,opt,name=epInternalRead,proto3,oneof"`
}

type PlDeliver_EpInternalState struct {
	EpInternalState *EpInternalState `protobuf:"bytes,37,opt,name=epInternalState,proto3,oneof"`
}

type PlDeliver_EpInternalWrite struct {
	EpInternalWrite *EpInternalWrite `protobuf:"bytes,38,opt,name=epInternalWrite,proto3,oneof"`
}

type PlDeliver_EcInternalNack struct {
	EcInternalNack *EcInternalNack `protobuf:"bytes,41,opt,name=ecInternalNack,proto3,oneof"`
}

type PlDeliver_EcInternalNewEpoch struct {
	EcInternalNewEpoch *EcInternalNewEpoch `protobuf:"bytes,42,opt,name=ecInternalNewEpoch,proto3,oneof"`
}

type PlDeliver_EcStartEpoch struct {
	EcStartEpoch *EcStartEpoch `protobuf:"bytes,43,opt,name=ecStartEpoch,proto3,oneof"`
}

type PlDeliver_BebBroadcast struct {
	BebBroadcast *BebBroadcast `protobuf:"bytes,50,opt,name=bebBroadcast,proto3,oneof"`
}

type PlDeliver_BebDeliver struct {
	BebDeliver *BebDeliver `protobuf:"bytes,51,opt,name=bebDeliver,proto3,oneof"`
}

type PlDeliver_EldTimeout struct {
	EldTimeout *EldTimeout `protobuf:"bytes,60,opt,name=eldTimeout,proto3,oneof"`
}

type PlDeliver_EldTrust struct {
	EldTrust *EldTrust `protobuf:"bytes,61,opt,name=eldTrust,proto3,oneof"`
}

type PlDeliver_NnarInternalAck struct {
	NnarInternalAck *NnarInternalAck `protobuf:"bytes,70,opt,name=nnarInternalAck,proto3,oneof"`
}

type PlDeliver_NnarInternalRead struct {
	NnarInternalRead *NnarInternalRead `protobuf:"bytes,71,opt,name=nnarInternalRead,proto3,oneof"`
}

type PlDeliver_NnarInternalValue struct {
	NnarInternalValue *NnarInternalValue `protobuf:"bytes,72,opt,name=nnarInternalValue,proto3,oneof"`
}

type PlDeliver_NnarInternalWrite struct {
	NnarInternalWrite *NnarInternalWrite `protobuf:"bytes,73,opt,name=nnarInternalWrite,proto3,oneof"`
}

type PlDeliver_NnarRead struct {
	NnarRead *NnarRead `protobuf:"bytes,74,opt,name=nnarRead,proto3,oneof"`
}

type PlDeliver_NnarReadReturn struct {
	NnarReadReturn *NnarReadReturn `protobuf:"bytes,75,opt,name=nnarReadReturn,proto3,oneof"`
}

type PlDeliver_NnarWrite struct {
	NnarWrite *NnarWrite `protobuf:"bytes,76,opt,name=nnarWrite,proto3,oneof"`
}

type PlDeliver_NnarWriteReturn struct {
	NnarWriteReturn *NnarWriteReturn `protobuf:"bytes,77,opt,name=nnarWriteReturn,proto3,oneof"`
}

type PlDeliver_EpfdTimeout struct {
	EpfdTimeout *EpfdTimeout `protobuf:"bytes,80,opt,name=epfdTimeout,proto3,oneof"`
}

type PlDeliver_EpfdInternalHeartbeatRequest struct {
	EpfdInternalHeartbeatRequest *EpfdInternalHeartbeatRequest `protobuf:"bytes,81,opt,name=epfdInternalHeartbeatRequest,proto3,oneof"`
}

type PlDeliver_EpfdInternalHeartbeatReply struct {
	EpfdInternalHeartbeatReply *EpfdInternalHeartbeatReply `protobuf:"bytes,82,opt,name=epfdInternalHeartbeatReply,proto3,oneof"`
}

type PlDeliver_EpfdSuspect struct {
	EpfdSuspect *EpfdSuspect `protobuf:"bytes,83,opt,name=epfdSuspect,proto3,oneof"`
}

type PlDeliver_EpfdRestore struct {
	EpfdRestore *EpfdRestore `protobuf:"bytes,84,opt,name=epfdRestore,proto3,oneof"`
}

type PlDeliver_PlDeliver struct {
	PlDeliver *PlDeliver `protobuf:"bytes,90,opt,name=plDeliver,proto3,oneof"`
}

type PlDeliver_PlSend struct {
	PlSend *PlSend `protobuf:"bytes,91,opt,name=plSend,proto3,oneof"`
}

func (*PlDeliver_ProcRegistration) isPlDeliver_Content() {}

func (*PlDeliver_ProcInitializeSystem) isPlDeliver_Content() {}

func (*PlDeliver_ProcDestroySystem) isPlDeliver_Content() {}

func (*PlDeliver_AppBroadcast) isPlDeliver_Content() {}

func (*PlDeliver_AppPropose) isPlDeliver_Content() {}

func (*PlDeliver_AppDecide) isPlDeliver_Content() {}

func (*PlDeliver_AppRead) isPlDeliver_Content() {}

func (*PlDeliver_AppWrite) isPlDeliver_Content() {}

func (*PlDeliver_AppReadReturn) isPlDeliver_Content() {}

func (*PlDeliver_AppWriteReturn) isPlDeliver_Content() {}

func (*PlDeliver_UcDecide) isPlDeliver_Content() {}

func (*PlDeliver_UcPropose) isPlDeliver_Content() {}

func (*PlDeliver_EpAbort) isPlDeliver_Content() {}

func (*PlDeliver_EpAborted) isPlDeliver_Content() {}

func (*PlDeliver_EpInternalAccept) isPlDeliver_Content() {}

func (*PlDeliver_EpDecide) isPlDeliver_Content() {}

func (*PlDeliver_EpInternalDecided) isPlDeliver_Content() {}

func (*PlDeliver_EpPropose) isPlDeliver_Content() {}

func (*PlDeliver_EpInternalRead) isPlDeliver_Content() {}

func (*PlDeliver_EpInternalState) isPlDeliver_Content() {}

func (*PlDeliver_EpInternalWrite) isPlDeliver_Content() {}

func (*PlDeliver_EcInternalNack) isPlDeliver_Content() {}

func (*PlDeliver_EcInternalNewEpoch) isPlDeliver_Content() {}

func (*PlDeliver_EcStartEpoch) isPlDeliver_Content() {}

func (*PlDeliver_BebBroadcast) isPlDeliver_Content() {}

func (*PlDeliver_BebDeliver) isPlDeliver_Content() {}

func (*PlDeliver_EldTimeout) isPlDeliver_Content() {}

func (*PlDeliver_EldTrust) isPlDeliver_Content() {}

func (*PlDeliver_NnarInternalAck) isPlDeliver_Content() {}

func (*PlDeliver_NnarInternalRead) isPlDeliver_Content() {}

func (*PlDeliver_NnarInternalValue) isPlDeliver_Content() {}

func (*PlDeliver_NnarInternalWrite) isPlDeliver_Content() {}

func (*PlDeliver_NnarRead) isPlDeliver_Content() {}

func (*PlDeliver_NnarReadReturn) isPlDeliver_Content() {}

func (*PlDeliver_NnarWrite) isPlDeliver_Content() {}

func (*PlDeliver_NnarWriteReturn) isPlDeliver_Content() {}

func (*PlDeliver_EpfdTimeout) isPlDeliver_Content() {}

func (*PlDeliver_EpfdInternalHeartbeatRequest) isPlDeliver_Content() {}

func (*PlDeliver_EpfdInternalHeartbeatReply) isPlDeliver_Content() {}

func (*PlDeliver_EpfdSuspect) isPlDeliver_Content() {}

func (*PlDeliver_EpfdRestore) isPlDeliver_Content() {}

func (*PlDeliver_PlDeliver) isPlDeliver_Content() {}

func (*PlDeliver_PlSend) isPlDeliver_Content() {}

// BEB
// TODO: Why does bebBroadcast have message wrapper? probably some other algos,
// but in that case use oneof here.
type BebBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*BebBroadcast_Value
	Content isBebBroadcast_Content `protobuf_oneof:"content"`
}

func (x *BebBroadcast) Reset() {
	*x = BebBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BebBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BebBroadcast) ProtoMessage() {}

func (x *BebBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BebBroadcast.ProtoReflect.Descriptor instead.
func (*BebBroadcast) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{43}
}

func (m *BebBroadcast) GetContent() isBebBroadcast_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *BebBroadcast) GetValue() *Value {
	if x, ok := x.GetContent().(*BebBroadcast_Value); ok {
		return x.Value
	}
	return nil
}

type isBebBroadcast_Content interface {
	isBebBroadcast_Content()
}

type BebBroadcast_Value struct {
	Value *Value `protobuf:"bytes,1,opt,name=value,proto3,oneof"`
}

func (*BebBroadcast_Value) isBebBroadcast_Content() {}

type BebDeliver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*BebDeliver_Value
	Content isBebDeliver_Content `protobuf_oneof:"content"`
	Sender  *ProcessId           `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *BebDeliver) Reset() {
	*x = BebDeliver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BebDeliver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BebDeliver) ProtoMessage() {}

func (x *BebDeliver) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BebDeliver.ProtoReflect.Descriptor instead.
func (*BebDeliver) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{44}
}

func (m *BebDeliver) GetContent() isBebDeliver_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *BebDeliver) GetValue() *Value {
	if x, ok := x.GetContent().(*BebDeliver_Value); ok {
		return x.Value
	}
	return nil
}

func (x *BebDeliver) GetSender() *ProcessId {
	if x != nil {
		return x.Sender
	}
	return nil
}

type isBebDeliver_Content interface {
	isBebDeliver_Content()
}

type BebDeliver_Value struct {
	Value *Value `protobuf:"bytes,1,opt,name=value,proto3,oneof"`
}

func (*BebDeliver_Value) isBebDeliver_Content() {}

type NetworkMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderHost          string `protobuf:"bytes,1,opt,name=senderHost,proto3" json:"senderHost,omitempty"`
	SenderListeningPort int32  `protobuf:"varint,2,opt,name=senderListeningPort,proto3" json:"senderListeningPort,omitempty"`
	// Identifies whether it is sent by the hub or other processes (technically
	// redundant, but...)
	ToLink  string   `protobuf:"bytes,3,opt,name=toLink,proto3" json:"toLink,omitempty"`
	Message *Message `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *NetworkMessage) Reset() {
	*x = NetworkMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMessage) ProtoMessage() {}

func (x *NetworkMessage) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMessage.ProtoReflect.Descriptor instead.
func (*NetworkMessage) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{45}
}

func (x *NetworkMessage) GetSenderHost() string {
	if x != nil {
		return x.SenderHost
	}
	return ""
}

func (x *NetworkMessage) GetSenderListeningPort() int32 {
	if x != nil {
		return x.SenderListeningPort
	}
	return 0
}

func (x *NetworkMessage) GetToLink() string {
	if x != nil {
		return x.ToLink
	}
	return ""
}

func (x *NetworkMessage) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// Wrapper message, sent in events.
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageUuid       string `protobuf:"bytes,1,opt,name=message_uuid,json=messageUuid,proto3" json:"message_uuid,omitempty"`
	FromAbstractionId string `protobuf:"bytes,2,opt,name=from_abstraction_id,json=fromAbstractionId,proto3" json:"from_abstraction_id,omitempty"`
	ToAbstractionId   string `protobuf:"bytes,3,opt,name=to_abstraction_id,json=toAbstractionId,proto3" json:"to_abstraction_id,omitempty"`
	SystemId          string `protobuf:"bytes,4,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// Types that are assignable to Content:
	//
	//	*Message_ProcRegistration
	//	*Message_ProcInitializeSystem
	//	*Message_ProcDestroySystem
	//	*Message_AppBroadcast
	//	*Message_AppPropose
	//	*Message_AppDecide
	//	*Message_AppRead
	//	*Message_AppWrite
	//	*Message_AppReadReturn
	//	*Message_AppWriteReturn
	//	*Message_UcDecide
	//	*Message_UcPropose
	//	*Message_EpAbort
	//	*Message_EpAborted
	//	*Message_EpInternalAccept
	//	*Message_EpDecide
	//	*Message_EpInternalDecided
	//	*Message_EpPropose
	//	*Message_EpInternalRead
	//	*Message_EpInternalState
	//	*Message_EpInternalWrite
	//	*Message_EcInternalNack
	//	*Message_EcInternalNewEpoch
	//	*Message_EcStartEpoch
	//	*Message_BebBroadcast
	//	*Message_BebDeliver
	//	*Message_EldTimeout
	//	*Message_EldTrust
	//	*Message_NnarInternalAck
	//	*Message_NnarInternalRead
	//	*Message_NnarInternalValue
	//	*Message_NnarInternalWrite
	//	*Message_NnarRead
	//	*Message_NnarReadReturn
	//	*Message_NnarWrite
	//	*Message_NnarWriteReturn
	//	*Message_EpfdTimeout
	//	*Message_EpfdInternalHeartbeatRequest
	//	*Message_EpfdInternalHeartbeatReply
	//	*Message_EpfdSuspect
	//	*Message_EpfdRestore
	//	*Message_PlDeliver
	//	*Message_PlSend
	Content isMessage_Content `protobuf_oneof:"content"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_v2_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_v2_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_communication_protocol_v2_proto_rawDescGZIP(), []int{46}
}

func (x *Message) GetMessageUuid() string {
	if x != nil {
		return x.MessageUuid
	}
	return ""
}

func (x *Message) GetFromAbstractionId() string {
	if x != nil {
		return x.FromAbstractionId
	}
	return ""
}

func (x *Message) GetToAbstractionId() string {
	if x != nil {
		return x.ToAbstractionId
	}
	return ""
}

func (x *Message) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (m *Message) GetContent() isMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Message) GetProcRegistration() *ProcRegistration {
	if x, ok := x.GetContent().(*Message_ProcRegistration); ok {
		return x.ProcRegistration
	}
	return nil
}

func (x *Message) GetProcInitializeSystem() *ProcInitializeSystem {
	if x, ok := x.GetContent().(*Message_ProcInitializeSystem); ok {
		return x.ProcInitializeSystem
	}
	return nil
}

func (x *Message) GetProcDestroySystem() *ProcDestroySystem {
	if x, ok := x.GetContent().(*Message_ProcDestroySystem); ok {
		return x.ProcDestroySystem
	}
	return nil
}

func (x *Message) GetAppBroadcast() *AppBroadcast {
	if x, ok := x.GetContent().(*Message_AppBroadcast); ok {
		return x.AppBroadcast
	}
	return nil
}

func (x *Message) GetAppPropose() *AppPropose {
	if x, ok := x.GetContent().(*Message_AppPropose); ok {
		return x.AppPropose
	}
	return nil
}

func (x *Message) GetAppDecide() *AppDecide {
	if x, ok := x.GetContent().(*Message_AppDecide); ok {
		return x.AppDecide
	}
	return nil
}

func (x *Message) GetAppRead() *AppRead {
	if x, ok := x.GetContent().(*Message_AppRead); ok {
		return x.AppRead
	}
	return nil
}

func (x *Message) GetAppWrite() *AppWrite {
	if x, ok := x.GetContent().(*Message_AppWrite); ok {
		return x.AppWrite
	}
	return nil
}

func (x *Message) GetAppReadReturn() *AppReadReturn {
	if x, ok := x.GetContent().(*Message_AppReadReturn); ok {
		return x.AppReadReturn
	}
	return nil
}

func (x *Message) GetAppWriteReturn() *AppWriteReturn {
	if x, ok := x.GetContent().(*Message_AppWriteReturn); ok {
		return x.AppWriteReturn
	}
	return nil
}

func (x *Message) GetUcDecide() *UcDecide {
	if x, ok := x.GetContent().(*Message_UcDecide); ok {
		return x.UcDecide
	}
	return nil
}

func (x *Message) GetUcPropose() *UcPropose {
	if x, ok := x.GetContent().(*Message_UcPropose); ok {
		return x.UcPropose
	}
	return nil
}

func (x *Message) GetEpAbort() *EpAbort {
	if x, ok := x.GetContent().(*Message_EpAbort); ok {
		return x.EpAbort
	}
	return nil
}

func (x *Message) GetEpAborted() *EpAborted {
	if x, ok := x.GetContent().(*Message_EpAborted); ok {
		return x.EpAborted
	}
	return nil
}

func (x *Message) GetEpInternalAccept() *EpInternalAccept {
	if x, ok := x.GetContent().(*Message_EpInternalAccept); ok {
		return x.EpInternalAccept
	}
	return nil
}

func (x *Message) GetEpDecide() *EpDecide {
	if x, ok := x.GetContent().(*Message_EpDecide); ok {
		return x.EpDecide
	}
	return nil
}

func (x *Message) GetEpInternalDecided() *EpInternalDecided {
	if x, ok := x.GetContent().(*Message_EpInternalDecided); ok {
		return x.EpInternalDecided
	}
	return nil
}

func (x *Message) GetEpPropose() *EpPropose {
	if x, ok := x.GetContent().(*Message_EpPropose); ok {
		return x.EpPropose
	}
	return nil
}

func (x *Message) GetEpInternalRead() *EpInternalRead {
	if x, ok := x.GetContent().(*Message_EpInternalRead); ok {
		return x.EpInternalRead
	}
	return nil
}

func (x *Message) GetEpInternalState() *EpInternalState {
	if x, ok := x.GetContent().(*Message_EpInternalState); ok {
		return x.EpInternalState
	}
	return nil
}

func (x *Message) GetEpInternalWrite() *EpInternalWrite {
	if x, ok := x.GetContent().(*Message_EpInternalWrite); ok {
		return x.EpInternalWrite
	}
	return nil
}

func (x *Message) GetEcInternalNack() *EcInternalNack {
	if x, ok := x.GetContent().(*Message_EcInternalNack); ok {
		return x.EcInternalNack
	}
	return nil
}

func (x *Message) GetEcInternalNewEpoch() *EcInternalNewEpoch {
	if x, ok := x.GetContent().(*Message_EcInternalNewEpoch); ok {
		return x.EcInternalNewEpoch
	}
	return nil
}

func (x *Message) GetEcStartEpoch() *EcStartEpoch {
	if x, ok := x.GetContent().(*Message_EcStartEpoch); ok {
		return x.EcStartEpoch
	}
	return nil
}

func (x *Message) GetBebBroadcast() *BebBroadcast {
	if x, ok := x.GetContent().(*Message_BebBroadcast); ok {
		return x.BebBroadcast
	}
	return nil
}

func (x *Message) GetBebDeliver() *BebDeliver {
	if x, ok := x.GetContent().(*Message_BebDeliver); ok {
		return x.BebDeliver
	}
	return nil
}

func (x *Message) GetEldTimeout() *EldTimeout {
	if x, ok := x.GetContent().(*Message_EldTimeout); ok {
		return x.EldTimeout
	}
	return nil
}

func (x *Message) GetEldTrust() *EldTrust {
	if x, ok := x.GetContent().(*Message_EldTrust); ok {
		return x.EldTrust
	}
	return nil
}

func (x *Message) GetNnarInternalAck() *NnarInternalAck {
	if x, ok := x.GetContent().(*Message_NnarInternalAck); ok {
		return x.NnarInternalAck
	}
	return nil
}

func (x *Message) GetNnarInternalRead() *NnarInternalRead {
	if x, ok := x.GetContent().(*Message_NnarInternalRead); ok {
		return x.NnarInternalRead
	}
	return nil
}

func (x *Message) GetNnarInternalValue() *NnarInternalValue {
	if x, ok := x.GetContent().(*Message_NnarInternalValue); ok {
		return x.NnarInternalValue
	}
	return nil
}

func (x *Message) GetNnarInternalWrite() *NnarInternalWrite {
	if x, ok := x.GetContent().(*Message_NnarInternalWrite); ok {
		return x.NnarInternalWrite
	}
	return nil
}

func (x *Message) GetNnarRead() *NnarRead {
	if x, ok := x.GetContent().(*Message_NnarRead); ok {
		return x.NnarRead
	}
	return nil
}

func (x *Message) GetNnarReadReturn() *NnarReadReturn {
	if x, ok := x.GetContent().(*Message_NnarReadReturn); ok {
		return x.NnarReadReturn
	}
	return nil
}

func (x *Message) GetNnarWrite() *NnarWrite {
	if x, ok := x.GetContent().(*Message_NnarWrite); ok {
		return x.NnarWrite
	}
	return nil
}

func (x *Message) GetNnarWriteReturn() *NnarWriteReturn {
	if x, ok := x.GetContent().(*Message_NnarWriteReturn); ok {
		return x.NnarWriteReturn
	}
	return nil
}

func (x *Message) GetEpfdTimeout() *EpfdTimeout {
	if x, ok := x.GetContent().(*Message_EpfdTimeout); ok {
		return x.EpfdTimeout
	}
	return nil
}

func (x *Message) GetEpfdInternalHeartbeatRequest() *EpfdInternalHeartbeatRequest {
	if x, ok := x.GetContent().(*Message_EpfdInternalHeartbeatRequest); ok {
		return x.EpfdInternalHeartbeatRequest
	}
	return nil
}

func (x *Message) GetEpfdInternalHeartbeatReply() *EpfdInternalHeartbeatReply {
	if x, ok := x.GetContent().(*Message_EpfdInternalHeartbeatReply); ok {
		return x.EpfdInternalHeartbeatReply
	}
	return nil
}

func (x *Message) GetEpfdSuspect() *EpfdSuspect {
	if x, ok := x.GetContent().(*Message_EpfdSuspect); ok {
		return x.EpfdSuspect
	}
	return nil
}

func (x *Message) GetEpfdRestore() *EpfdRestore {
	if x, ok := x.GetContent().(*Message_EpfdRestore); ok {
		return x.EpfdRestore
	}
	return nil
}

func (x *Message) GetPlDeliver() *PlDeliver {
	if x, ok := x.GetContent().(*Message_PlDeliver); ok {
		return x.PlDeliver
	}
	return nil
}

func (x *Message) GetPlSend() *PlSend {
	if x, ok := x.GetContent().(*Message_PlSend); ok {
		return x.PlSend
	}
	return nil
}

type isMessage_Content interface {
	isMessage_Content()
}

type Message_ProcRegistration struct {
	ProcRegistration *ProcRegistration `protobuf:"bytes,7,opt,name=procRegistration,proto3,oneof"`
}

type Message_ProcInitializeSystem struct {
	ProcInitializeSystem *ProcInitializeSystem `protobuf:"bytes,8,opt,name=procInitializeSystem,proto3,oneof"`
}

type Message_ProcDestroySystem struct {
	ProcDestroySystem *ProcDestroySystem `protobuf:"bytes,9,opt,name=procDestroySystem,proto3,oneof"`
}

type Message_AppBroadcast struct {
	AppBroadcast *AppBroadcast `protobuf:"bytes,10,opt,name=appBroadcast,proto3,oneof"`
}

type Message_AppPropose struct {
	AppPropose *AppPropose `protobuf:"bytes,12,opt,name=appPropose,proto3,oneof"`
}

type Message_AppDecide struct {
	AppDecide *AppDecide `protobuf:"bytes,13,opt,name=appDecide,proto3,oneof"`
}

type Message_AppRead struct {
	AppRead *AppRead `protobuf:"bytes,14,opt,name=appRead,proto3,oneof"`
}

type Message_AppWrite struct {
	AppWrite *AppWrite `protobuf:"bytes,15,opt,name=appWrite,proto3,oneof"`
}

type Message_AppReadReturn struct {
	AppReadReturn *AppReadReturn `protobuf:"bytes,16,opt,name=appReadReturn,proto3,oneof"`
}

type Message_AppWriteReturn struct {
	AppWriteReturn *AppWriteReturn `protobuf:"bytes,17,opt,name=appWriteReturn,proto3,oneof"`
}

type Message_UcDecide struct {
	UcDecide *UcDecide `protobuf:"bytes,20,opt,name=ucDecide,proto3,oneof"`
}

type Message_UcPropose struct {
	UcPropose *UcPropose `protobuf:"bytes,21,opt,name=ucPropose,proto3,oneof"`
}

type Message_EpAbort struct {
	EpAbort *EpAbort `protobuf:"bytes,30,opt,name=epAbort,proto3,oneof"`
}

type Message_EpAborted struct {
	EpAborted *EpAborted `protobuf:"bytes,31,opt,name=epAborted,proto3,oneof"`
}

type Message_EpInternalAccept struct {
	EpInternalAccept *EpInternalAccept `protobuf:"bytes,32,opt,name=epInternalAccept,proto3,oneof"`
}

type Message_EpDecide struct {
	EpDecide *EpDecide `protobuf:"bytes,33,opt,name=epDecide,proto3,oneof"`
}

type Message_EpInternalDecided struct {
	EpInternalDecided *EpInternalDecided `protobuf:"bytes,34,opt,name=epInternalDecided,proto3,oneof"`
}

type Message_EpPropose struct {
	EpPropose *EpPropose `protobuf:"bytes,35,opt,name=epPropose,proto3,oneof"`
}

type Message_EpInternalRead struct {
	EpInternalRead *EpInternalRead `protobuf:"bytes,36,opt,name=epInternalRead,proto3,oneof"`
}

type Message_EpInternalState struct {
	EpInternalState *EpInternalState `protobuf:"bytes,37,opt,name=epInternalState,proto3,oneof"`
}

type Message_EpInternalWrite struct {
	EpInternalWrite *EpInternalWrite `protobuf:"bytes,38,opt,name=epInternalWrite,proto3,oneof"`
}

type Message_EcInternalNack struct {
	EcInternalNack *EcInternalNack `protobuf:"bytes,41,opt,name=ecInternalNack,proto3,oneof"`
}

type Message_EcInternalNewEpoch struct {
	EcInternalNewEpoch *EcInternalNewEpoch `protobuf:"bytes,42,opt,name=ecInternalNewEpoch,proto3,oneof"`
}

type Message_EcStartEpoch struct {
	EcStartEpoch *EcStartEpoch `protobuf:"bytes,43,opt,name=ecStartEpoch,proto3,oneof"`
}

type Message_BebBroadcast struct {
	BebBroadcast *BebBroadcast `protobuf:"bytes,50,opt,name=bebBroadcast,proto3,oneof"`
}

type Message_BebDeliver struct {
	BebDeliver *BebDeliver `protobuf:"bytes,51,opt,name=bebDeliver,proto3,oneof"`
}

type Message_EldTimeout struct {
	EldTimeout *EldTimeout `protobuf:"bytes,60,opt,name=eldTimeout,proto3,oneof"`
}

type Message_EldTrust struct {
	EldTrust *EldTrust `protobuf:"bytes,61,opt,name=eldTrust,proto3,oneof"`
}

type Message_NnarInternalAck struct {
	NnarInternalAck *NnarInternalAck `protobuf:"bytes,70,opt,name=nnarInternalAck,proto3,oneof"`
}

type Message_NnarInternalRead struct {
	NnarInternalRead *NnarInternalRead `protobuf:"bytes,71,opt,name=nnarInternalRead,proto3,oneof"`
}

type Message_NnarInternalValue struct {
	NnarInternalValue *NnarInternalValue `protobuf:"bytes,72,opt,name=nnarInternalValue,proto3,oneof"`
}

type Message_NnarInternalWrite struct {
	NnarInternalWrite *NnarInternalWrite `protobuf:"bytes,73,opt,name=nnarInternalWrite,proto3,oneof"`
}

type Message_NnarRead struct {
	NnarRead *NnarRead `protobuf:"bytes,74,opt,name=nnarRead,proto3,oneof"`
}

type Message_NnarReadReturn struct {
	NnarReadReturn *NnarReadReturn `protobuf:"bytes,75,opt,name=nnarReadReturn,proto3,oneof"`
}

type Message_NnarWrite struct {
	NnarWrite *NnarWrite `protobuf:"bytes,76,opt,name=nnarWrite,proto3,oneof"`
}

type Message_NnarWriteReturn struct {
	NnarWriteReturn *NnarWriteReturn `protobuf:"bytes,77,opt,name=nnarWriteReturn,proto3,oneof"`
}

type Message_EpfdTimeout struct {
	EpfdTimeout *EpfdTimeout `protobuf:"bytes,80,opt,name=epfdTimeout,proto3,oneof"`
}

type Message_EpfdInternalHeartbeatRequest struct {
	EpfdInternalHeartbeatRequest *EpfdInternalHeartbeatRequest `protobuf:"bytes,81,opt,name=epfdInternalHeartbeatRequest,proto3,oneof"`
}

type Message_EpfdInternalHeartbeatReply struct {
	EpfdInternalHeartbeatReply *EpfdInternalHeartbeatReply `protobuf:"bytes,82,opt,name=epfdInternalHeartbeatReply,proto3,oneof"`
}

type Message_EpfdSuspect struct {
	EpfdSuspect *EpfdSuspect `protobuf:"bytes,83,opt,name=epfdSuspect,proto3,oneof"`
}

type Message_EpfdRestore struct {
	EpfdRestore *EpfdRestore `protobuf:"bytes,84,opt,name=epfdRestore,proto3,oneof"`
}

type Message_PlDeliver struct {
	PlDeliver *PlDeliver `protobuf:"bytes,90,opt,name=plDeliver,proto3,oneof"`
}

type Message_PlSend struct {
	PlSend *PlSend `protobuf:"bytes,91,opt,name=plSend,proto3,oneof"`
}

func (*Message_ProcRegistration) isMessage_Content() {}

func (*Message_ProcInitializeSystem) isMessage_Content() {}

func (*Message_ProcDestroySystem) isMessage_Content() {}

func (*Message_AppBroadcast) isMessage_Content() {}

func (*Message_AppPropose) isMessage_Content() {}

func (*Message_AppDecide) isMessage_Content() {}

func (*Message_AppRead) isMessage_Content() {}

func (*Message_AppWrite) isMessage_Content() {}

func (*Message_AppReadReturn) isMessage_Content() {}

func (*Message_AppWriteReturn) isMessage_Content() {}

func (*Message_UcDecide) isMessage_Content() {}

func (*Message_UcPropose) isMessage_Content() {}

func (*Message_EpAbort) isMessage_Content() {}

func (*Message_EpAborted) isMessage_Content() {}

func (*Message_EpInternalAccept) isMessage_Content() {}

func (*Message_EpDecide) isMessage_Content() {}

func (*Message_EpInternalDecided) isMessage_Content() {}

func (*Message_EpPropose) isMessage_Content() {}

func (*Message_EpInternalRead) isMessage_Content() {}

func (*Message_EpInternalState) isMessage_Content() {}

func (*Message_EpInternalWrite) isMessage_Content() {}

func (*Message_EcInternalNack) isMessage_Content() {}

func (*Message_EcInternalNewEpoch) isMessage_Content() {}

func (*Message_EcStartEpoch) isMessage_Content() {}

func (*Message_BebBroadcast) isMessage_Content() {}

func (*Message_BebDeliver) isMessage_Content() {}

func (*Message_EldTimeout) isMessage_Content() {}

func (*Message_EldTrust) isMessage_Content() {}

func (*Message_NnarInternalAck) isMessage_Content() {}

func (*Message_NnarInternalRead) isMessage_Content() {}

func (*Message_NnarInternalValue) isMessage_Content() {}

func (*Message_NnarInternalWrite) isMessage_Content() {}

func (*Message_NnarRead) isMessage_Content() {}

func (*Message_NnarReadReturn) isMessage_Content() {}

func (*Message_NnarWrite) isMessage_Content() {}

func (*Message_NnarWriteReturn) isMessage_Content() {}

func (*Message_EpfdTimeout) isMessage_Content() {}

func (*Message_EpfdInternalHeartbeatRequest) isMessage_Content() {}

func (*Message_EpfdInternalHeartbeatReply) isMessage_Content() {}

func (*Message_EpfdSuspect) isMessage_Content() {}

func (*Message_EpfdRestore) isMessage_Content() {}

func (*Message_PlDeliver) isMessage_Content() {}

func (*Message_PlSend) isMessage_Content() {}

var File_communication_protocol_v2_proto protoreflect.FileDescriptor

var file_communication_protocol_v2_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2d, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32,
	0x22, 0x73, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x2f, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x76, 0x22, 0x3e, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4e, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x36,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x3a, 0x0a, 0x0c, 0x41,
	0x70, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x2a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x44, 0x65,
	0x63, 0x69, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x25, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x57, 0x0a, 0x0d, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x22, 0x37, 0x0a, 0x09, 0x55, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x08, 0x55,
	0x63, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x45, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x22, 0x71,
	0x0a, 0x09, 0x45, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x37, 0x0a, 0x09, 0x45, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x08, 0x45, 0x70,
	0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x22, 0x65, 0x0a, 0x0f, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a,
	0x0f, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x22, 0x3f, 0x0a, 0x11, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65,
	0x63, 0x69, 0x64, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e,
	0x61, 0x63, 0x6b, 0x22, 0x6a, 0x0a, 0x0c, 0x45, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22,
	0x32, 0x0a, 0x12, 0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x77,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x0c, 0x0a, 0x0a, 0x45, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x22, 0x3e, 0x0a, 0x08, 0x45, 0x6c, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x0a, 0x0a, 0x08, 0x4e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x22, 0x2a, 0x0a,
	0x10, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x4e, 0x6e,
	0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52,
	0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x2a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x09, 0x4e, 0x6e, 0x61,
	0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x3c, 0x0a,
	0x0e, 0x4e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4e,
	0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x22, 0x0d,
	0x0a, 0x0b, 0x45, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x1e, 0x0a,
	0x1c, 0x45, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a,
	0x1a, 0x45, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x41, 0x0a, 0x0b, 0x45,
	0x70, 0x66, 0x64, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x41,
	0x0a, 0x0b, 0x45, 0x70, 0x66, 0x64, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x32, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x22, 0xf6, 0x17, 0x0a, 0x06, 0x50, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x3a, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x14, 0x70, 0x72,
	0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x50, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48,
	0x00, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x41, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x32,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07, 0x61, 0x70, 0x70, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x61, 0x70, 0x70,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32,
	0x2e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x47, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x75, 0x63, 0x44, 0x65,
	0x63, 0x69, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x55, 0x63, 0x44, 0x65, 0x63,
	0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x08, 0x75, 0x63, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x55, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x75, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x70, 0x41,
	0x62, 0x6f, 0x72, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x48, 0x00, 0x52, 0x07, 0x65, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x65, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32,
	0x2e, 0x45, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x65, 0x70,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x10, 0x65, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x48, 0x00, 0x52, 0x10, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x70, 0x44, 0x65, 0x63, 0x69,
	0x64, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x65, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x50, 0x0a,
	0x11, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x64,
	0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11, 0x65, 0x70,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x64, 0x12,
	0x38, 0x0a, 0x09, 0x65, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x45, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x65, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x65, 0x70, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x00, 0x52, 0x0e, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x4a, 0x0a, 0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x65,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4a,
	0x0a, 0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x65, 0x63,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x63, 0x6b, 0x18, 0x29, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x63,
	0x6b, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e,
	0x61, 0x63, 0x6b, 0x12, 0x53, 0x0a, 0x12, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x48, 0x00, 0x52, 0x12, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x41, 0x0a, 0x0c, 0x65, 0x63, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45,
	0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0c, 0x65,
	0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x41, 0x0a, 0x0c, 0x62,
	0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x42, 0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x62, 0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x0a, 0x62, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x42, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x0a, 0x62, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0a, 0x65,
	0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x45, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6c,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6c, 0x64, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x6c, 0x64, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x6b, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x6e, 0x61, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x4d, 0x0a, 0x10, 0x6e,
	0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x18,
	0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x50, 0x0a, 0x11, 0x6e, 0x6e,
	0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6e, 0x6e, 0x61, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x50, 0x0a, 0x11,
	0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6e, 0x6e, 0x61,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32,
	0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6e, 0x61,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x12, 0x47, 0x0a, 0x0e, 0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e,
	0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0e,
	0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x38,
	0x0a, 0x09, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x4c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6e,
	0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x6e, 0x6e, 0x61, 0x72,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x4d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x71, 0x0a, 0x1c, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x65, 0x70, 0x66, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x1a, 0x65, 0x70, 0x66, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x1a, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x53, 0x75,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x53, 0x75, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x09, 0x70, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2f,
	0x0a, 0x06, 0x70, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50,
	0x6c, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x42,
	0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xef, 0x17, 0x0a, 0x09, 0x50,
	0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x14, 0x70, 0x72, 0x6f,
	0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x14,
	0x70, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x50, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x41, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x70, 0x70,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x70, 0x70,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70,
	0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x44, 0x65, 0x63,
	0x69, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x63,
	0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65,
	0x12, 0x32, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x61,
	0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x48, 0x00, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x47, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x75, 0x63,
	0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x55, 0x63, 0x44,
	0x65, 0x63, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x08, 0x75, 0x63, 0x44, 0x65, 0x63, 0x69, 0x64,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x55, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x75, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x65,
	0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x41,
	0x62, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x07, 0x65, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x65, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x45, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09,
	0x65, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x10, 0x65, 0x70, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x10, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x70, 0x44, 0x65,
	0x63, 0x69, 0x64, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x44, 0x65, 0x63,
	0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x08, 0x65, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12,
	0x50, 0x0a, 0x11, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63,
	0x69, 0x64, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11,
	0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x65, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x65,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x61, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x4a, 0x0a, 0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x4a, 0x0a, 0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x70, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0e,
	0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x63, 0x6b, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e,
	0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4e, 0x61, 0x63, 0x6b, 0x12, 0x53, 0x0a, 0x12, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x45,
	0x70, 0x6f, 0x63, 0x68, 0x48, 0x00, 0x52, 0x12, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x41, 0x0a, 0x0c, 0x65, 0x63,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32,
	0x2e, 0x45, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x48, 0x00, 0x52,
	0x0c, 0x65, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x41, 0x0a,
	0x0c, 0x62, 0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x76, 0x32, 0x2e, 0x42, 0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0c, 0x62, 0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x0a, 0x62, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x42, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x0a, 0x62, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a,
	0x0a, 0x65, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x45, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x65, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6c,
	0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x6c, 0x64,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x12, 0x4a, 0x0a, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x6b, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x6e,
	0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x4d, 0x0a,
	0x10, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x64, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x6e, 0x61, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x50, 0x0a, 0x11,
	0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6e, 0x6e, 0x61,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x50,
	0x0a, 0x11, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6e,
	0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x18, 0x4a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6e,
	0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x12, 0x47, 0x0a, 0x0e, 0x6e, 0x6e, 0x61, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x4e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00,
	0x52, 0x0e, 0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x12, 0x38, 0x0a, 0x09, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x4c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x6e, 0x6e,
	0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x4d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x71, 0x0a, 0x1c, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x65, 0x70, 0x66,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x1a, 0x65, 0x70, 0x66,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70,
	0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x1a, 0x65, 0x70, 0x66, 0x64,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x53, 0x75,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64,
	0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x53,
	0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x6c, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x70, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x2f, 0x0a, 0x06, 0x70, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32,
	0x2e, 0x50, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x53, 0x65, 0x6e,
	0x64, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x0c,
	0x42, 0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x0a, 0x42, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xac,
	0x01, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x30, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd7, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x72, 0x6f, 0x6d, 0x41,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x6f, 0x5f, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x41, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x50, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x11,
	0x70, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x41, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x61, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07, 0x61, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x35, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76,
	0x32, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x61,
	0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x47, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x75, 0x63, 0x44, 0x65, 0x63, 0x69, 0x64,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x55, 0x63, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x08, 0x75, 0x63, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x55, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09, 0x75, 0x63, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x70, 0x41, 0x62, 0x6f, 0x72,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x65, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x70,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x65, 0x70, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x10, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x48,
	0x00, 0x52, 0x10, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x65, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x65, 0x70,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x64, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11, 0x65, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09,
	0x65, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x45, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09, 0x65, 0x70, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52,
	0x0e, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x4a, 0x0a, 0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x70, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x65,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x65, 0x63, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x63, 0x6b, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x63, 0x6b, 0x48, 0x00,
	0x52, 0x0e, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x63, 0x6b,
	0x12, 0x53, 0x0a, 0x12, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65,
	0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x48,
	0x00, 0x52, 0x12, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x77,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x41, 0x0a, 0x0c, 0x65, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x63, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x63, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x41, 0x0a, 0x0c, 0x62, 0x65, 0x62, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x42,
	0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x62,
	0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x62,
	0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e,
	0x42, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x65,
	0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0a, 0x65, 0x6c, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x6c, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6c, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x6c, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0f,
	0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x4d, 0x0a, 0x10, 0x6e, 0x6e, 0x61, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x18, 0x47, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x50, 0x0a, 0x11, 0x6e, 0x6e, 0x61, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x48, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x6e, 0x6e, 0x61,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x49,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6e,
	0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e,
	0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x47, 0x0a, 0x0e, 0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x6e, 0x61,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x6e,
	0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e,
	0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x6e, 0x61, 0x72,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x4e,
	0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00,
	0x52, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x71, 0x0a, 0x1c, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x1a, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x1a, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x53, 0x75, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x18, 0x5a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x09, 0x70, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x70,
	0x6c, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x53, 0x65,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_communication_protocol_v2_proto_rawDescOnce sync.Once
	file_communication_protocol_v2_proto_rawDescData = file_communication_protocol_v2_proto_rawDesc
)

func file_communication_protocol_v2_proto_rawDescGZIP() []byte {
	file_communication_protocol_v2_proto_rawDescOnce.Do(func() {
		file_communication_protocol_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_communication_protocol_v2_proto_rawDescData)
	})
	return file_communication_protocol_v2_proto_rawDescData
}

var file_communication_protocol_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_communication_protocol_v2_proto_goTypes = []interface{}{
	(*ProcessId)(nil),                    // 0: hw.protobufv2.ProcessId
	(*Value)(nil),                        // 1: hw.protobufv2.Value
	(*ProcRegistration)(nil),             // 2: hw.protobufv2.ProcRegistration
	(*ProcInitializeSystem)(nil),         // 3: hw.protobufv2.ProcInitializeSystem
	(*ProcDestroySystem)(nil),            // 4: hw.protobufv2.ProcDestroySystem
	(*AppBroadcast)(nil),                 // 5: hw.protobufv2.AppBroadcast
	(*AppPropose)(nil),                   // 6: hw.protobufv2.AppPropose
	(*AppDecide)(nil),                    // 7: hw.protobufv2.AppDecide
	(*AppRead)(nil),                      // 8: hw.protobufv2.AppRead
	(*AppWrite)(nil),                     // 9: hw.protobufv2.AppWrite
	(*AppReadReturn)(nil),                // 10: hw.protobufv2.AppReadReturn
	(*AppWriteReturn)(nil),               // 11: hw.protobufv2.AppWriteReturn
	(*UcPropose)(nil),                    // 12: hw.protobufv2.UcPropose
	(*UcDecide)(nil),                     // 13: hw.protobufv2.UcDecide
	(*EpAbort)(nil),                      // 14: hw.protobufv2.EpAbort
	(*EpAborted)(nil),                    // 15: hw.protobufv2.EpAborted
	(*EpPropose)(nil),                    // 16: hw.protobufv2.EpPropose
	(*EpDecide)(nil),                     // 17: hw.protobufv2.EpDecide
	(*EpInternalRead)(nil),               // 18: hw.protobufv2.EpInternalRead
	(*EpInternalState)(nil),              // 19: hw.protobufv2.EpInternalState
	(*EpInternalWrite)(nil),              // 20: hw.protobufv2.EpInternalWrite
	(*EpInternalAccept)(nil),             // 21: hw.protobufv2.EpInternalAccept
	(*EpInternalDecided)(nil),            // 22: hw.protobufv2.EpInternalDecided
	(*EcInternalNack)(nil),               // 23: hw.protobufv2.EcInternalNack
	(*EcStartEpoch)(nil),                 // 24: hw.protobufv2.EcStartEpoch
	(*EcInternalNewEpoch)(nil),           // 25: hw.protobufv2.EcInternalNewEpoch
	(*EldTimeout)(nil),                   // 26: hw.protobufv2.EldTimeout
	(*EldTrust)(nil),                     // 27: hw.protobufv2.EldTrust
	(*NnarRead)(nil),                     // 28: hw.protobufv2.NnarRead
	(*NnarInternalRead)(nil),             // 29: hw.protobufv2.NnarInternalRead
	(*NnarInternalValue)(nil),            // 30: hw.protobufv2.NnarInternalValue
	(*NnarInternalWrite)(nil),            // 31: hw.protobufv2.NnarInternalWrite
	(*NnarWrite)(nil),                    // 32: hw.protobufv2.NnarWrite
	(*NnarInternalAck)(nil),              // 33: hw.protobufv2.NnarInternalAck
	(*NnarReadReturn)(nil),               // 34: hw.protobufv2.NnarReadReturn
	(*NnarWriteReturn)(nil),              // 35: hw.protobufv2.NnarWriteReturn
	(*EpfdTimeout)(nil),                  // 36: hw.protobufv2.EpfdTimeout
	(*EpfdInternalHeartbeatRequest)(nil), // 37: hw.protobufv2.EpfdInternalHeartbeatRequest
	(*EpfdInternalHeartbeatReply)(nil),   // 38: hw.protobufv2.EpfdInternalHeartbeatReply
	(*EpfdSuspect)(nil),                  // 39: hw.protobufv2.EpfdSuspect
	(*EpfdRestore)(nil),                  // 40: hw.protobufv2.EpfdRestore
	(*PlSend)(nil),                       // 41: hw.protobufv2.PlSend
	(*PlDeliver)(nil),                    // 42: hw.protobufv2.PlDeliver
	(*BebBroadcast)(nil),                 // 43: hw.protobufv2.BebBroadcast
	(*BebDeliver)(nil),                   // 44: hw.protobufv2.BebDeliver
	(*NetworkMessage)(nil),               // 45: hw.protobufv2.NetworkMessage
	(*Message)(nil),                      // 46: hw.protobufv2.Message
}
var file_communication_protocol_v2_proto_depIdxs = []int32{
	0,   // 0: hw.protobufv2.ProcInitializeSystem.processes:type_name -> hw.protobufv2.ProcessId
	1,   // 1: hw.protobufv2.AppBroadcast.value:type_name -> hw.protobufv2.Value
	1,   // 2: hw.protobufv2.AppPropose.value:type_name -> hw.protobufv2.Value
	1,   // 3: hw.protobufv2.AppDecide.value:type_name -> hw.protobufv2.Value
	1,   // 4: hw.protobufv2.AppWrite.value:type_name -> hw.protobufv2.Value
	1,   // 5: hw.protobufv2.AppReadReturn.value:type_name -> hw.protobufv2.Value
	1,   // 6: hw.protobufv2.UcPropose.value:type_name -> hw.protobufv2.Value
	1,   // 7: hw.protobufv2.UcDecide.value:type_name -> hw.protobufv2.Value
	1,   // 8: hw.protobufv2.EpAborted.value:type_name -> hw.protobufv2.Value
	1,   // 9: hw.protobufv2.EpPropose.value:type_name -> hw.protobufv2.Value
	1,   // 10: hw.protobufv2.EpDecide.value:type_name -> hw.protobufv2.Value
	1,   // 11: hw.protobufv2.EpInternalState.value:type_name -> hw.protobufv2.Value
	1,   // 12: hw.protobufv2.EpInternalWrite.value:type_name -> hw.protobufv2.Value
	1,   // 13: hw.protobufv2.EpInternalDecided.value:type_name -> hw.protobufv2.Value
	0,   // 14: hw.protobufv2.EcStartEpoch.newLeader:type_name -> hw.protobufv2.ProcessId
	0,   // 15: hw.protobufv2.EldTrust.process:type_name -> hw.protobufv2.ProcessId
	1,   // 16: hw.protobufv2.NnarInternalValue.value:type_name -> hw.protobufv2.Value
	1,   // 17: hw.protobufv2.NnarInternalWrite.value:type_name -> hw.protobufv2.Value
	1,   // 18: hw.protobufv2.NnarWrite.value:type_name -> hw.protobufv2.Value
	1,   // 19: hw.protobufv2.NnarReadReturn.value:type_name -> hw.protobufv2.Value
	0,   // 20: hw.protobufv2.EpfdSuspect.process:type_name -> hw.protobufv2.ProcessId
	0,   // 21: hw.protobufv2.EpfdRestore.process:type_name -> hw.protobufv2.ProcessId
	0,   // 22: hw.protobufv2.PlSend.destination:type_name -> hw.protobufv2.ProcessId
	2,   // 23: hw.protobufv2.PlSend.procRegistration:type_name -> hw.protobufv2.ProcRegistration
	3,   // 24: hw.protobufv2.PlSend.procInitializeSystem:type_name -> hw.protobufv2.ProcInitializeSystem
	4,   // 25: hw.protobufv2.PlSend.procDestroySystem:type_name -> hw.protobufv2.ProcDestroySystem
	5,   // 26: hw.protobufv2.PlSend.appBroadcast:type_name -> hw.protobufv2.AppBroadcast
	6,   // 27: hw.protobufv2.PlSend.appPropose:type_name -> hw.protobufv2.AppPropose
	7,   // 28: hw.protobufv2.PlSend.appDecide:type_name -> hw.protobufv2.AppDecide
	8,   // 29: hw.protobufv2.PlSend.appRead:type_name -> hw.protobufv2.AppRead
	9,   // 30: hw.protobufv2.PlSend.appWrite:type_name -> hw.protobufv2.AppWrite
	10,  // 31: hw.protobufv2.PlSend.appReadReturn:type_name -> hw.protobufv2.AppReadReturn
	11,  // 32: hw.protobufv2.PlSend.appWriteReturn:type_name -> hw.protobufv2.AppWriteReturn
	13,  // 33: hw.protobufv2.PlSend.ucDecide:type_name -> hw.protobufv2.UcDecide
	12,  // 34: hw.protobufv2.PlSend.ucPropose:type_name -> hw.protobufv2.UcPropose
	14,  // 35: hw.protobufv2.PlSend.epAbort:type_name -> hw.protobufv2.EpAbort
	15,  // 36: hw.protobufv2.PlSend.epAborted:type_name -> hw.protobufv2.EpAborted
	21,  // 37: hw.protobufv2.PlSend.epInternalAccept:type_name -> hw.protobufv2.EpInternalAccept
	17,  // 38: hw.protobufv2.PlSend.epDecide:type_name -> hw.protobufv2.EpDecide
	22,  // 39: hw.protobufv2.PlSend.epInternalDecided:type_name -> hw.protobufv2.EpInternalDecided
	16,  // 40: hw.protobufv2.PlSend.epPropose:type_name -> hw.protobufv2.EpPropose
	18,  // 41: hw.protobufv2.PlSend.epInternalRead:type_name -> hw.protobufv2.EpInternalRead
	19,  // 42: hw.protobufv2.PlSend.epInternalState:type_name -> hw.protobufv2.EpInternalState
	20,  // 43: hw.protobufv2.PlSend.epInternalWrite:type_name -> hw.protobufv2.EpInternalWrite
	23,  // 44: hw.protobufv2.PlSend.ecInternalNack:type_name -> hw.protobufv2.EcInternalNack
	25,  // 45: hw.protobufv2.PlSend.ecInternalNewEpoch:type_name -> hw.protobufv2.EcInternalNewEpoch
	24,  // 46: hw.protobufv2.PlSend.ecStartEpoch:type_name -> hw.protobufv2.EcStartEpoch
	43,  // 47: hw.protobufv2.PlSend.bebBroadcast:type_name -> hw.protobufv2.BebBroadcast
	44,  // 48: hw.protobufv2.PlSend.bebDeliver:type_name -> hw.protobufv2.BebDeliver
	26,  // 49: hw.protobufv2.PlSend.eldTimeout:type_name -> hw.protobufv2.EldTimeout
	27,  // 50: hw.protobufv2.PlSend.eldTrust:type_name -> hw.protobufv2.EldTrust
	33,  // 51: hw.protobufv2.PlSend.nnarInternalAck:type_name -> hw.protobufv2.NnarInternalAck
	29,  // 52: hw.protobufv2.PlSend.nnarInternalRead:type_name -> hw.protobufv2.NnarInternalRead
	30,  // 53: hw.protobufv2.PlSend.nnarInternalValue:type_name -> hw.protobufv2.NnarInternalValue
	31,  // 54: hw.protobufv2.PlSend.nnarInternalWrite:type_name -> hw.protobufv2.NnarInternalWrite
	28,  // 55: hw.protobufv2.PlSend.nnarRead:type_name -> hw.protobufv2.NnarRead
	34,  // 56: hw.protobufv2.PlSend.nnarReadReturn:type_name -> hw.protobufv2.NnarReadReturn
	32,  // 57: hw.protobufv2.PlSend.nnarWrite:type_name -> hw.protobufv2.NnarWrite
	35,  // 58: hw.protobufv2.PlSend.nnarWriteReturn:type_name -> hw.protobufv2.NnarWriteReturn
	36,  // 59: hw.protobufv2.PlSend.epfdTimeout:type_name -> hw.protobufv2.EpfdTimeout
	37,  // 60: hw.protobufv2.PlSend.epfdInternalHeartbeatRequest:type_name -> hw.protobufv2.EpfdInternalHeartbeatRequest
	38,  // 61: hw.protobufv2.PlSend.epfdInternalHeartbeatReply:type_name -> hw.protobufv2.EpfdInternalHeartbeatReply
	39,  // 62: hw.protobufv2.PlSend.epfdSuspect:type_name -> hw.protobufv2.EpfdSuspect
	40,  // 63: hw.protobufv2.PlSend.epfdRestore:type_name -> hw.protobufv2.EpfdRestore
	42,  // 64: hw.protobufv2.PlSend.plDeliver:type_name -> hw.protobufv2.PlDeliver
	41,  // 65: hw.protobufv2.PlSend.plSend:type_name -> hw.protobufv2.PlSend
	0,   // 66: hw.protobufv2.PlDeliver.sender:type_name -> hw.protobufv2.ProcessId
	2,   // 67: hw.protobufv2.PlDeliver.procRegistration:type_name -> hw.protobufv2.ProcRegistration
	3,   // 68: hw.protobufv2.PlDeliver.procInitializeSystem:type_name -> hw.protobufv2.ProcInitializeSystem
	4,   // 69: hw.protobufv2.PlDeliver.procDestroySystem:type_name -> hw.protobufv2.ProcDestroySystem
	5,   // 70: hw.protobufv2.PlDeliver.appBroadcast:type_name -> hw.protobufv2.AppBroadcast
	6,   // 71: hw.protobufv2.PlDeliver.appPropose:type_name -> hw.protobufv2.AppPropose
	7,   // 72: hw.protobufv2.PlDeliver.appDecide:type_name -> hw.protobufv2.AppDecide
	8,   // 73: hw.protobufv2.PlDeliver.appRead:type_name -> hw.protobufv2.AppRead
	9,   // 74: hw.protobufv2.PlDeliver.appWrite:type_name -> hw.protobufv2.AppWrite
	10,  // 75: hw.protobufv2.PlDeliver.appReadReturn:type_name -> hw.protobufv2.AppReadReturn
	11,  // 76: hw.protobufv2.PlDeliver.appWriteReturn:type_name -> hw.protobufv2.AppWriteReturn
	13,  // 77: hw.protobufv2.PlDeliver.ucDecide:type_name -> hw.protobufv2.UcDecide
	12,  // 78: hw.protobufv2.PlDeliver.ucPropose:type_name -> hw.protobufv2.UcPropose
	14,  // 79: hw.protobufv2.PlDeliver.epAbort:type_name -> hw.protobufv2.EpAbort
	15,  // 80: hw.protobufv2.PlDeliver.epAborted:type_name -> hw.protobufv2.EpAborted
	21,  // 81: hw.protobufv2.PlDeliver.epInternalAccept:type_name -> hw.protobufv2.EpInternalAccept
	17,  // 82: hw.protobufv2.PlDeliver.epDecide:type_name -> hw.protobufv2.EpDecide
	22,  // 83: hw.protobufv2.PlDeliver.epInternalDecided:type_name -> hw.protobufv2.EpInternalDecided
	16,  // 84: hw.protobufv2.PlDeliver.epPropose:type_name -> hw.protobufv2.EpPropose
	18,  // 85: hw.protobufv2.PlDeliver.epInternalRead:type_name -> hw.protobufv2.EpInternalRead
	19,  // 86: hw.protobufv2.PlDeliver.epInternalState:type_name -> hw.protobufv2.EpInternalState
	20,  // 87: hw.protobufv2.PlDeliver.epInternalWrite:type_name -> hw.protobufv2.EpInternalWrite
	23,  // 88: hw.protobufv2.PlDeliver.ecInternalNack:type_name -> hw.protobufv2.EcInternalNack
	25,  // 89: hw.protobufv2.PlDeliver.ecInternalNewEpoch:type_name -> hw.protobufv2.EcInternalNewEpoch
	24,  // 90: hw.protobufv2.PlDeliver.ecStartEpoch:type_name -> hw.protobufv2.EcStartEpoch
	43,  // 91: hw.protobufv2.PlDeliver.bebBroadcast:type_name -> hw.protobufv2.BebBroadcast
	44,  // 92: hw.protobufv2.PlDeliver.bebDeliver:type_name -> hw.protobufv2.BebDeliver
	26,  // 93: hw.protobufv2.PlDeliver.eldTimeout:type_name -> hw.protobufv2.EldTimeout
	27,  // 94: hw.protobufv2.PlDeliver.eldTrust:type_name -> hw.protobufv2.EldTrust
	33,  // 95: hw.protobufv2.PlDeliver.nnarInternalAck:type_name -> hw.protobufv2.NnarInternalAck
	29,  // 96: hw.protobufv2.PlDeliver.nnarInternalRead:type_name -> hw.protobufv2.NnarInternalRead
	30,  // 97: hw.protobufv2.PlDeliver.nnarInternalValue:type_name -> hw.protobufv2.NnarInternalValue
	31,  // 98: hw.protobufv2.PlDeliver.nnarInternalWrite:type_name -> hw.protobufv2.NnarInternalWrite
	28,  // 99: hw.protobufv2.PlDeliver.nnarRead:type_name -> hw.protobufv2.NnarRead
	34,  // 100: hw.protobufv2.PlDeliver.nnarReadReturn:type_name -> hw.protobufv2.NnarReadReturn
	32,  // 101: hw.protobufv2.PlDeliver.nnarWrite:type_name -> hw.protobufv2.NnarWrite
	35,  // 102: hw.protobufv2.PlDeliver.nnarWriteReturn:type_name -> hw.protobufv2.NnarWriteReturn
	36,  // 103: hw.protobufv2.PlDeliver.epfdTimeout:type_name -> hw.protobufv2.EpfdTimeout
	37,  // 104: hw.protobufv2.PlDeliver.epfdInternalHeartbeatRequest:type_name -> hw.protobufv2.EpfdInternalHeartbeatRequest
	38,  // 105: hw.protobufv2.PlDeliver.epfdInternalHeartbeatReply:type_name -> hw.protobufv2.EpfdInternalHeartbeatReply
	39,  // 106: hw.protobufv2.PlDeliver.epfdSuspect:type_name -> hw.protobufv2.EpfdSuspect
	40,  // 107: hw.protobufv2.PlDeliver.epfdRestore:type_name -> hw.protobufv2.EpfdRestore
	42,  // 108: hw.protobufv2.PlDeliver.plDeliver:type_name -> hw.protobufv2.PlDeliver
	41,  // 109: hw.protobufv2.PlDeliver.plSend:type_name -> hw.protobufv2.PlSend
	1,   // 110: hw.protobufv2.BebBroadcast.value:type_name -> hw.protobufv2.Value
	1,   // 111: hw.protobufv2.BebDeliver.value:type_name -> hw.protobufv2.Value
	0,   // 112: hw.protobufv2.BebDeliver.sender:type_name -> hw.protobufv2.ProcessId
	46,  // 113: hw.protobufv2.NetworkMessage.message:type_name -> hw.protobufv2.Message
	2,   // 114: hw.protobufv2.Message.procRegistration:type_name -> hw.protobufv2.ProcRegistration
	3,   // 115: hw.protobufv2.Message.procInitializeSystem:type_name -> hw.protobufv2.ProcInitializeSystem
	4,   // 116: hw.protobufv2.Message.procDestroySystem:type_name -> hw.protobufv2.ProcDestroySystem
	5,   // 117: hw.protobufv2.Message.appBroadcast:type_name -> hw.protobufv2.AppBroadcast
	6,   // 118: hw.protobufv2.Message.appPropose:type_name -> hw.protobufv2.AppPropose
	7,   // 119: hw.protobufv2.Message.appDecide:type_name -> hw.protobufv2.AppDecide
	8,   // 120: hw.protobufv2.Message.appRead:type_name -> hw.protobufv2.AppRead
	9,   // 121: hw.protobufv2.Message.appWrite:type_name -> hw.protobufv2.AppWrite
	10,  // 122: hw.protobufv2.Message.appReadReturn:type_name -> hw.protobufv2.AppReadReturn
	11,  // 123: hw.protobufv2.Message.appWriteReturn:type_name -> hw.protobufv2.AppWriteReturn
	13,  // 124: hw.protobufv2.Message.ucDecide:type_name -> hw.protobufv2.UcDecide
	12,  // 125: hw.protobufv2.Message.ucPropose:type_name -> hw.protobufv2.UcPropose
	14,  // 126: hw.protobufv2.Message.epAbort:type_name -> hw.protobufv2.EpAbort
	15,  // 127: hw.protobufv2.Message.epAborted:type_name -> hw.protobufv2.EpAborted
	21,  // 128: hw.protobufv2.Message.epInternalAccept:type_name -> hw.protobufv2.EpInternalAccept
	17,  // 129: hw.protobufv2.Message.epDecide:type_name -> hw.protobufv2.EpDecide
	22,  // 130: hw.protobufv2.Message.epInternalDecided:type_name -> hw.protobufv2.EpInternalDecided
	16,  // 131: hw.protobufv2.Message.epPropose:type_name -> hw.protobufv2.EpPropose
	18,  // 132: hw.protobufv2.Message.epInternalRead:type_name -> hw.protobufv2.EpInternalRead
	19,  // 133: hw.protobufv2.Message.epInternalState:type_name -> hw.protobufv2.EpInternalState
	20,  // 134: hw.protobufv2.Message.epInternalWrite:type_name -> hw.protobufv2.EpInternalWrite
	23,  // 135: hw.protobufv2.Message.ecInternalNack:type_name -> hw.protobufv2.EcInternalNack
	25,  // 136: hw.protobufv2.Message.ecInternalNewEpoch:type_name -> hw.protobufv2.EcInternalNewEpoch
	24,  // 137: hw.protobufv2.Message.ecStartEpoch:type_name -> hw.protobufv2.EcStartEpoch
	43,  // 138: hw.protobufv2.Message.bebBroadcast:type_name -> hw.protobufv2.BebBroadcast
	44,  // 139: hw.protobufv2.Message.bebDeliver:type_name -> hw.protobufv2.BebDeliver
	26,  // 140: hw.protobufv2.Message.eldTimeout:type_name -> hw.protobufv2.EldTimeout
	27,  // 141: hw.protobufv2.Message.eldTrust:type_name -> hw.protobufv2.EldTrust
	33,  // 142: hw.protobufv2.Message.nnarInternalAck:type_name -> hw.protobufv2.NnarInternalAck
	29,  // 143: hw.protobufv2.Message.nnarInternalRead:type_name -> hw.protobufv2.NnarInternalRead
	30,  // 144: hw.protobufv2.Message.nnarInternalValue:type_name -> hw.protobufv2.NnarInternalValue
	31,  // 145: hw.protobufv2.Message.nnarInternalWrite:type_name -> hw.protobufv2.NnarInternalWrite
	28,  // 146: hw.protobufv2.Message.nnarRead:type_name -> hw.protobufv2.NnarRead
	34,  // 147: hw.protobufv2.Message.nnarReadReturn:type_name -> hw.protobufv2.NnarReadReturn
	32,  // 148: hw.protobufv2.Message.nnarWrite:type_name -> hw.protobufv2.NnarWrite
	35,  // 149: hw.protobufv2.Message.nnarWriteReturn:type_name -> hw.protobufv2.NnarWriteReturn
	36,  // 150: hw.protobufv2.Message.epfdTimeout:type_name -> hw.protobufv2.EpfdTimeout
	37,  // 151: hw.protobufv2.Message.epfdInternalHeartbeatRequest:type_name -> hw.protobufv2.EpfdInternalHeartbeatRequest
	38,  // 152: hw.protobufv2.Message.epfdInternalHeartbeatReply:type_name -> hw.protobufv2.EpfdInternalHeartbeatReply
	39,  // 153: hw.protobufv2.Message.epfdSuspect:type_name -> hw.protobufv2.EpfdSuspect
	40,  // 154: hw.protobufv2.Message.epfdRestore:type_name -> hw.protobufv2.EpfdRestore
	42,  // 155: hw.protobufv2.Message.plDeliver:type_name -> hw.protobufv2.PlDeliver
	41,  // 156: hw.protobufv2.Message.plSend:type_name -> hw.protobufv2.PlSend
	157, // [157:157] is the sub-list for method output_type
	157, // [157:157] is the sub-list for method input_type
	157, // [157:157] is the sub-list for extension type_name
	157, // [157:157] is the sub-list for extension extendee
	0,   // [0:157] is the sub-list for field type_name
}

func init() { file_communication_protocol_v2_proto_init() }
func file_communication_protocol_v2_proto_init() {
	if File_communication_protocol_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_communication_protocol_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcInitializeSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcDestroySystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPropose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDecide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppReadReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppWriteReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcPropose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcDecide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpAbort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpAborted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpPropose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpDecide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalDecided); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcInternalNack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcStartEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcInternalNewEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EldTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EldTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarInternalRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarInternalValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarInternalWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarInternalAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarReadReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarWriteReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdInternalHeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdInternalHeartbeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdSuspect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdRestore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlDeliver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BebBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BebDeliver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_v2_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_communication_protocol_v2_proto_msgTypes[41].OneofWrappers = []interface{}{
		(*PlSend_ProcRegistration)(nil),
		(*PlSend_ProcInitializeSystem)(nil),
		(*PlSend_ProcDestroySystem)(nil),
		(*PlSend_AppBroadcast)(nil),
		(*PlSend_AppPropose)(nil),
		(*PlSend_AppDecide)(nil),
		(*PlSend_AppRead)(nil),
		(*PlSend_AppWrite)(nil),
		(*PlSend_AppReadReturn)(nil),
		(*PlSend_AppWriteReturn)(nil),
		(*PlSend_UcDecide)(nil),
		(*PlSend_UcPropose)(nil),
		(*PlSend_EpAbort)(nil),
		(*PlSend_EpAborted)(nil),
		(*PlSend_EpInternalAccept)(nil),
		(*PlSend_EpDecide)(nil),
		(*PlSend_EpInternalDecided)(nil),
		(*PlSend_EpPropose)(nil),
		(*PlSend_EpInternalRead)(nil),
		(*PlSend_EpInternalState)(nil),
		(*PlSend_EpInternalWrite)(nil),
		(*PlSend_EcInternalNack)(nil),
		(*PlSend_EcInternalNewEpoch)(nil),
		(*PlSend_EcStartEpoch)(nil),
		(*PlSend_BebBroadcast)(nil),
		(*PlSend_BebDeliver)(nil),
		(*PlSend_EldTimeout)(nil),
		(*PlSend_EldTrust)(nil),
		(*PlSend_NnarInternalAck)(nil),
		(*PlSend_NnarInternalRead)(nil),
		(*PlSend_NnarInternalValue)(nil),
		(*PlSend_NnarInternalWrite)(nil),
		(*PlSend_NnarRead)(nil),
		(*PlSend_NnarReadReturn)(nil),
		(*PlSend_NnarWrite)(nil),
		(*PlSend_NnarWriteReturn)(nil),
		(*PlSend_EpfdTimeout)(nil),
		(*PlSend_EpfdInternalHeartbeatRequest)(nil),
		(*PlSend_EpfdInternalHeartbeatReply)(nil),
		(*PlSend_EpfdSuspect)(nil),
		(*PlSend_EpfdRestore)(nil),
		(*PlSend_PlDeliver)(nil),
		(*PlSend_PlSend)(nil),
	}
	file_communication_protocol_v2_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*PlDeliver_ProcRegistration)(nil),
		(*PlDeliver_ProcInitializeSystem)(nil),
		(*PlDeliver_ProcDestroySystem)(nil),
		(*PlDeliver_AppBroadcast)(nil),
		(*PlDeliver_AppPropose)(nil),
		(*PlDeliver_AppDecide)(nil),
		(*PlDeliver_AppRead)(nil),
		(*PlDeliver_AppWrite)(nil),
		(*PlDeliver_AppReadReturn)(nil),
		(*PlDeliver_AppWriteReturn)(nil),
		(*PlDeliver_UcDecide)(nil),
		(*PlDeliver_UcPropose)(nil),
		(*PlDeliver_EpAbort)(nil),
		(*PlDeliver_EpAborted)(nil),
		(*PlDeliver_EpInternalAccept)(nil),
		(*PlDeliver_EpDecide)(nil),
		(*PlDeliver_EpInternalDecided)(nil),
		(*PlDeliver_EpPropose)(nil),
		(*PlDeliver_EpInternalRead)(nil),
		(*PlDeliver_EpInternalState)(nil),
		(*PlDeliver_EpInternalWrite)(nil),
		(*PlDeliver_EcInternalNack)(nil),
		(*PlDeliver_EcInternalNewEpoch)(nil),
		(*PlDeliver_EcStartEpoch)(nil),
		(*PlDeliver_BebBroadcast)(nil),
		(*PlDeliver_BebDeliver)(nil),
		(*PlDeliver_EldTimeout)(nil),
		(*PlDeliver_EldTrust)(nil),
		(*PlDeliver_NnarInternalAck)(nil),
		(*PlDeliver_NnarInternalRead)(nil),
		(*PlDeliver_NnarInternalValue)(nil),
		(*PlDeliver_NnarInternalWrite)(nil),
		(*PlDeliver_NnarRead)(nil),
		(*PlDeliver_NnarReadReturn)(nil),
		(*PlDeliver_NnarWrite)(nil),
		(*PlDeliver_NnarWriteReturn)(nil),
		(*PlDeliver_EpfdTimeout)(nil),
		(*PlDeliver_EpfdInternalHeartbeatRequest)(nil),
		(*PlDeliver_EpfdInternalHeartbeatReply)(nil),
		(*PlDeliver_EpfdSuspect)(nil),
		(*PlDeliver_EpfdRestore)(nil),
		(*PlDeliver_PlDeliver)(nil),
		(*PlDeliver_PlSend)(nil),
	}
	file_communication_protocol_v2_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*BebBroadcast_Value)(nil),
	}
	file_communication_protocol_v2_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*BebDeliver_Value)(nil),
	}
	file_communication_protocol_v2_proto_msgTypes[46].OneofWrappers = []interface{}{
		(*Message_ProcRegistration)(nil),
		(*Message_ProcInitializeSystem)(nil),
		(*Message_ProcDestroySystem)(nil),
		(*Message_AppBroadcast)(nil),
		(*Message_AppPropose)(nil),
		(*Message_AppDecide)(nil),
		(*Message_AppRead)(nil),
		(*Message_AppWrite)(nil),
		(*Message_AppReadReturn)(nil),
		(*Message_AppWriteReturn)(nil),
		(*Message_UcDecide)(nil),
		(*Message_UcPropose)(nil),
		(*Message_EpAbort)(nil),
		(*Message_EpAborted)(nil),
		(*Message_EpInternalAccept)(nil),
		(*Message_EpDecide)(nil),
		(*Message_EpInternalDecided)(nil),
		(*Message_EpPropose)(nil),
		(*Message_EpInternalRead)(nil),
		(*Message_EpInternalState)(nil),
		(*Message_EpInternalWrite)(nil),
		(*Message_EcInternalNack)(nil),
		(*Message_EcInternalNewEpoch)(nil),
		(*Message_EcStartEpoch)(nil),
		(*Message_BebBroadcast)(nil),
		(*Message_BebDeliver)(nil),
		(*Message_EldTimeout)(nil),
		(*Message_EldTrust)(nil),
		(*Message_NnarInternalAck)(nil),
		(*Message_NnarInternalRead)(nil),
		(*Message_NnarInternalValue)(nil),
		(*Message_NnarInternalWrite)(nil),
		(*Message_NnarRead)(nil),
		(*Message_NnarReadReturn)(nil),
		(*Message_NnarWrite)(nil),
		(*Message_NnarWriteReturn)(nil),
		(*Message_EpfdTimeout)(nil),
		(*Message_EpfdInternalHeartbeatRequest)(nil),
		(*Message_EpfdInternalHeartbeatReply)(nil),
		(*Message_EpfdSuspect)(nil),
		(*Message_EpfdRestore)(nil),
		(*Message_PlDeliver)(nil),
		(*Message_PlSend)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_communication_protocol_v2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_communication_protocol_v2_proto_goTypes,
		DependencyIndexes: file_communication_protocol_v2_proto_depIdxs,
		MessageInfos:      file_communication_protocol_v2_proto_msgTypes,
	}.Build()
	File_communication_protocol_v2_proto = out.File
	file_communication_protocol_v2_proto_rawDesc = nil
	file_communication_protocol_v2_proto_goTypes = nil
	file_communication_protocol_v2_proto_depIdxs = nil
}
